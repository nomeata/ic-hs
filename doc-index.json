[{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:TMap_\">TMap_</a> :: [(Term, Term)] -&gt; Term","name":"TMap_","module":"IC.CBOR.Patterns","link":"IC-CBOR-Patterns.html#v:TMap_"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:TList_\">TList_</a> :: [Term] -&gt; Term","name":"TList_","module":"IC.CBOR.Patterns","link":"IC-CBOR-Patterns.html#v:TList_"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:TNat\">TNat</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> -&gt; Term","name":"TNat","module":"IC.CBOR.Patterns","link":"IC-CBOR-Patterns.html#v:TNat"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:TBlob\">TBlob</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; Term","name":"TBlob","module":"IC.CBOR.Patterns","link":"IC-CBOR-Patterns.html#v:TBlob"},{"display_html":"<a href=\"#v:decodeWithoutTag\">decodeWithoutTag</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> Term","name":"decodeWithoutTag","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:decodeWithoutTag"},{"display_html":"<a href=\"#v:decodeWithTag\">decodeWithTag</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> Term","name":"decodeWithTag","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:decodeWithTag"},{"display_html":"<a href=\"#v:parseMap\">parseMap</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; Term -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> [(Term, Term)]","name":"parseMap","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:parseMap"},{"display_html":"<a href=\"#v:parseBlob\">parseBlob</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; Term -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"parseBlob","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:parseBlob"},{"display_html":"<a href=\"#v:parseField\">parseField</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; [(Term, a)] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> a","name":"parseField","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:parseField"},{"display_html":"<a href=\"#v:optionalField\">optionalField</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; [(Term, a)] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"optionalField","module":"IC.CBOR.Parser","link":"IC-CBOR-Parser.html#v:optionalField"},{"display_html":"<a href=\"#v:cMAX_CANISTER_BALANCE\">cMAX_CANISTER_BALANCE</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"cMAX_CANISTER_BALANCE","module":"IC.Constants","link":"IC-Constants.html#v:cMAX_CANISTER_BALANCE"},{"display_html":"<a href=\"#v:init\">init</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"init","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#v:init"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SecretKey\">SecretKey</a>","name":"SecretKey","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#t:SecretKey"},{"display_html":"<a href=\"#v:createKey\">createKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-BLS.html#t:SecretKey\" title=\"IC.Crypto.BLS\">SecretKey</a>","name":"createKey","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#v:createKey"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto-BLS.html#t:SecretKey\" title=\"IC.Crypto.BLS\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#v:toPublicKey"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"IC-Crypto-BLS.html#t:SecretKey\" title=\"IC.Crypto.BLS\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"verify","module":"IC.Crypto.BLS","link":"IC-Crypto-BLS.html#v:verify"},{"display_html":"<a href=\"#v:safeDecode\">safeDecode</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> [ASN1]","name":"safeDecode","module":"IC.Crypto.DER.Decode","link":"IC-Crypto-DER-Decode.html#v:safeDecode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Suite\">Suite</a><ul class=\"subs\"><li>= <a href=\"#v:Ed25519\">Ed25519</a></li><li>| <a href=\"#v:WebAuthn\">WebAuthn</a></li><li>| <a href=\"#v:ECDSA\">ECDSA</a></li><li>| <a href=\"#v:Secp256k1\">Secp256k1</a></li><li>| <a href=\"#v:BLS\">BLS</a></li><li>| <a href=\"#v:CanisterSig\">CanisterSig</a></li></ul>","name":"Suite Ed25519 WebAuthn ECDSA Secp256k1 BLS CanisterSig","module":"IC.Crypto.DER","link":"IC-Crypto-DER.html#t:Suite"},{"display_html":"<a href=\"#v:encode\">encode</a> :: <a href=\"IC-Crypto-DER.html#t:Suite\" title=\"IC.Crypto.DER\">Suite</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"encode","module":"IC.Crypto.DER","link":"IC-Crypto-DER.html#v:encode"},{"display_html":"<a href=\"#v:decode\">decode</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> (<a href=\"IC-Crypto-DER.html#t:Suite\" title=\"IC.Crypto.DER\">Suite</a>, <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"decode","module":"IC.Crypto.DER","link":"IC-Crypto-DER.html#v:decode"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"verify","module":"IC.Crypto.DER_BLS","link":"IC-Crypto-DER_BLS.html#v:verify"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SecretKey\">SecretKey</a>","name":"SecretKey","module":"IC.Crypto.ECDSA","link":"IC-Crypto-ECDSA.html#t:SecretKey"},{"display_html":"<a href=\"#v:createKey\">createKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-ECDSA.html#t:SecretKey\" title=\"IC.Crypto.ECDSA\">SecretKey</a>","name":"createKey","module":"IC.Crypto.ECDSA","link":"IC-Crypto-ECDSA.html#v:createKey"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto-ECDSA.html#t:SecretKey\" title=\"IC.Crypto.ECDSA\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto.ECDSA","link":"IC-Crypto-ECDSA.html#v:toPublicKey"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"IC-Crypto-ECDSA.html#t:SecretKey\" title=\"IC.Crypto.ECDSA\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto.ECDSA","link":"IC-Crypto-ECDSA.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"verify","module":"IC.Crypto.ECDSA","link":"IC-Crypto-ECDSA.html#v:verify"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SecretKey\">SecretKey</a> = SecretKey","name":"SecretKey","module":"IC.Crypto.Ed25519","link":"IC-Crypto-Ed25519.html#t:SecretKey"},{"display_html":"<a href=\"#v:createKey\">createKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-Ed25519.html#t:SecretKey\" title=\"IC.Crypto.Ed25519\">SecretKey</a>","name":"createKey","module":"IC.Crypto.Ed25519","link":"IC-Crypto-Ed25519.html#v:createKey"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto-Ed25519.html#t:SecretKey\" title=\"IC.Crypto.Ed25519\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto.Ed25519","link":"IC-Crypto-Ed25519.html#v:toPublicKey"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"IC-Crypto-Ed25519.html#t:SecretKey\" title=\"IC.Crypto.Ed25519\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto.Ed25519","link":"IC-Crypto-Ed25519.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"verify","module":"IC.Crypto.Ed25519","link":"IC-Crypto-Ed25519.html#v:verify"},{"display_html":"<a href=\"#v:init\">init</a> :: [a] -&gt; [a]","name":"init","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#v:init"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SecretKey\">SecretKey</a>","name":"SecretKey","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#t:SecretKey"},{"display_html":"<a href=\"#v:createKey\">createKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-Secp256k1.html#t:SecretKey\" title=\"IC.Crypto.Secp256k1\">SecretKey</a>","name":"createKey","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#v:createKey"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto-Secp256k1.html#t:SecretKey\" title=\"IC.Crypto.Secp256k1\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#v:toPublicKey"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"IC-Crypto-Secp256k1.html#t:SecretKey\" title=\"IC.Crypto.Secp256k1\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"verify","module":"IC.Crypto.Secp256k1","link":"IC-Crypto-Secp256k1.html#v:verify"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MethodName\">MethodName</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"MethodName","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#t:MethodName"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Payload\">Payload</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"Payload","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#t:Payload"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Id\">Id</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"Id","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#t:Id"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ingress\">Ingress</a><ul class=\"subs\"><li>= <a href=\"#v:Create\">Create</a></li><li>| <a href=\"#v:Install\">Install</a> <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a></li><li>| <a href=\"#v:Reinstall\">Reinstall</a> <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a></li><li>| <a href=\"#v:Upgrade\">Upgrade</a> <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a></li><li>| <a href=\"#v:Update\">Update</a> <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a> <a href=\"IC-DRun-Parse.html#t:MethodName\" title=\"IC.DRun.Parse\">MethodName</a> <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a></li><li>| <a href=\"#v:Query\">Query</a> <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a> <a href=\"IC-DRun-Parse.html#t:MethodName\" title=\"IC.DRun.Parse\">MethodName</a> <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a></li></ul>","name":"Ingress Query Update Upgrade Reinstall Install Create","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#t:Ingress"},{"display_html":"<a href=\"#v:parseFile\">parseFile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> [<a href=\"IC-DRun-Parse.html#t:Ingress\" title=\"IC.DRun.Parse\">Ingress</a>]","name":"parseFile","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#v:parseFile"},{"display_html":"<a href=\"#v:parse\">parse</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; [<a href=\"IC-DRun-Parse.html#t:Ingress\" title=\"IC.DRun.Parse\">Ingress</a>]","name":"parse","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#v:parse"},{"display_html":"<a href=\"#v:parseLine\">parseLine</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-DRun-Parse.html#t:Ingress\" title=\"IC.DRun.Parse\">Ingress</a>","name":"parseLine","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#v:parseLine"},{"display_html":"<a href=\"#v:parseId\">parseId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-DRun-Parse.html#t:Id\" title=\"IC.DRun.Parse\">Id</a>","name":"parseId","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#v:parseId"},{"display_html":"<a href=\"#v:parseArg\">parseArg</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-DRun-Parse.html#t:Payload\" title=\"IC.DRun.Parse\">Payload</a>","name":"parseArg","module":"IC.DRun.Parse","link":"IC-DRun-Parse.html#v:parseArg"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GenR\">GenR</a><ul class=\"subs\"><li>= <a href=\"#v:GNat\">GNat</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a></li><li>| <a href=\"#v:GText\">GText</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:GBlob\">GBlob</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li><li>| <a href=\"#v:GRec\">GRec</a> (HashMap <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>)</li><li>| <a href=\"#v:GList\">GList</a> [<a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>]</li></ul>","name":"GenR GList GRec GBlob GText GNat","module":"IC.HTTP.GenR","link":"IC-HTTP-GenR.html#t:GenR"},{"display_html":"<a href=\"#v:emptyR\">emptyR</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"emptyR","module":"IC.HTTP.GenR","link":"IC-HTTP-GenR.html#v:emptyR"},{"display_html":"<a href=\"#v:-61-:\">(=:)</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; v -&gt; HashMap <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> v","name":"=:","module":"IC.HTTP.GenR","link":"IC-HTTP-GenR.html#v:-61-:"},{"display_html":"<a href=\"#v:rec\">rec</a> :: [HashMap <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>] -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"rec","module":"IC.HTTP.GenR","link":"IC-HTTP-GenR.html#v:rec"},{"display_html":"<a href=\"#v:encode\">encode</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/binary-0.8.7.0/docs/Data-Binary-Builder.html#t:Builder\" title=\"Data.Binary.Builder\">Builder</a>","name":"encode","module":"IC.HTTP.CBOR","link":"IC-HTTP-CBOR.html#v:encode"},{"display_html":"<a href=\"#v:decode\">decode</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"decode","module":"IC.HTTP.CBOR","link":"IC-HTTP-CBOR.html#v:decode"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RecordM\">RecordM</a> m = <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> (HashMap <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>) m","name":"RecordM","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#t:RecordM"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Field\">Field</a> a = <span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Parse\" title=\"IC.HTTP.GenR.Parse\">Parse</a> m =&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; m a","name":"Field","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#t:Field"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:Parse\">Parse</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:parseError\">parseError</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; m a</li></ul>","name":"Parse parseError","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#t:Parse"},{"display_html":"<a href=\"#v:record\">record</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Parse\" title=\"IC.HTTP.GenR.Parse\">Parse</a> m =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:RecordM\" title=\"IC.HTTP.GenR.Parse\">RecordM</a> m a -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; m a","name":"record","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:record"},{"display_html":"<a href=\"#v:field\">field</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Parse\" title=\"IC.HTTP.GenR.Parse\">Parse</a> m =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> a -&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:RecordM\" title=\"IC.HTTP.GenR.Parse\">RecordM</a> m a","name":"field","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:field"},{"display_html":"<a href=\"#v:optionalField\">optionalField</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Parse\" title=\"IC.HTTP.GenR.Parse\">Parse</a> m =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> a -&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:RecordM\" title=\"IC.HTTP.GenR.Parse\">RecordM</a> m (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a)","name":"optionalField","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:optionalField"},{"display_html":"<a href=\"#v:swallowAllFields\">swallowAllFields</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:RecordM\" title=\"IC.HTTP.GenR.Parse\">RecordM</a> m ()","name":"swallowAllFields","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:swallowAllFields"},{"display_html":"<a href=\"#v:anyType\">anyType</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"anyType","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:anyType"},{"display_html":"<a href=\"#v:text\">text</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"text","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:text"},{"display_html":"<a href=\"#v:blob\">blob</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"blob","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:blob"},{"display_html":"<a href=\"#v:nat\">nat</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"nat","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:nat"},{"display_html":"<a href=\"#v:percentage\">percentage</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"percentage","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:percentage"},{"display_html":"<a href=\"#v:listOf\">listOf</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> a -&gt; <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> [a]","name":"listOf","module":"IC.HTTP.GenR.Parse","link":"IC-HTTP-GenR-Parse.html#v:listOf"},{"display_html":"<a href=\"#v:sha256\">sha256</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sha256","module":"IC.Hash","link":"IC-Hash.html#v:sha256"},{"display_html":"<a href=\"#v:sha224\">sha224</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sha224","module":"IC.Hash","link":"IC-Hash.html#v:sha224"},{"display_html":"<a href=\"#v:requestId\">requestId</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; RequestId","name":"requestId","module":"IC.HTTP.RequestId","link":"IC-HTTP-RequestId.html#v:requestId"},{"display_html":"<a href=\"#v:init\">init</a> :: [a] -&gt; [a]","name":"init","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:init"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SecretKey\">SecretKey</a>","name":"SecretKey","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#t:SecretKey"},{"display_html":"<a href=\"#v:createECDSAKey\">createECDSAKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-WebAuthn.html#t:SecretKey\" title=\"IC.Crypto.WebAuthn\">SecretKey</a>","name":"createECDSAKey","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:createECDSAKey"},{"display_html":"<a href=\"#v:createRSAKey\">createRSAKey</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto-WebAuthn.html#t:SecretKey\" title=\"IC.Crypto.WebAuthn\">SecretKey</a>","name":"createRSAKey","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:createRSAKey"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto-WebAuthn.html#t:SecretKey\" title=\"IC.Crypto.WebAuthn\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:toPublicKey"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"IC-Crypto-WebAuthn.html#t:SecretKey\" title=\"IC.Crypto.WebAuthn\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"verify","module":"IC.Crypto.WebAuthn","link":"IC-Crypto-WebAuthn.html#v:verify"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Blob\">Blob</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"Blob","module":"IC.HashTree","link":"IC-HashTree.html#t:Blob"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Path\">Path</a> = [<a href=\"IC-HashTree.html#t:Label\" title=\"IC.HashTree\">Label</a>]","name":"Path","module":"IC.HashTree","link":"IC-HashTree.html#t:Path"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Label\">Label</a> = <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a>","name":"Label","module":"IC.HashTree","link":"IC-HashTree.html#t:Label"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Value\">Value</a> = <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a>","name":"Value","module":"IC.HashTree","link":"IC-HashTree.html#t:Value"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Hash\">Hash</a> = <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a>","name":"Hash","module":"IC.HashTree","link":"IC-HashTree.html#t:Hash"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LabeledTree\">LabeledTree</a><ul class=\"subs\"><li>= <a href=\"#v:Value\">Value</a> <a href=\"IC-HashTree.html#t:Value\" title=\"IC.HashTree\">Value</a></li><li>| <a href=\"#v:SubTrees\">SubTrees</a> (<a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a> <a href=\"IC-HashTree.html#t:LabeledTree\" title=\"IC.HashTree\">LabeledTree</a>)</li></ul>","name":"LabeledTree SubTrees Value","module":"IC.HashTree","link":"IC-HashTree.html#t:LabeledTree"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HashTree\">HashTree</a><ul class=\"subs\"><li>= <a href=\"#v:EmptyTree\">EmptyTree</a></li><li>| <a href=\"#v:Fork\">Fork</a> <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a></li><li>| <a href=\"#v:Labeled\">Labeled</a> <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a> <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a></li><li>| <a href=\"#v:Leaf\">Leaf</a> <a href=\"IC-HashTree.html#t:Value\" title=\"IC.HashTree\">Value</a></li><li>| <a href=\"#v:Pruned\">Pruned</a> <a href=\"IC-HashTree.html#t:Hash\" title=\"IC.HashTree\">Hash</a></li></ul>","name":"HashTree Pruned Labeled Fork EmptyTree Leaf","module":"IC.HashTree","link":"IC-HashTree.html#t:HashTree"},{"display_html":"<a href=\"#v:construct\">construct</a> :: <a href=\"IC-HashTree.html#t:LabeledTree\" title=\"IC.HashTree\">LabeledTree</a> -&gt; <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a>","name":"construct","module":"IC.HashTree","link":"IC-HashTree.html#v:construct"},{"display_html":"<a href=\"#v:foldBinary\">foldBinary</a> :: a -&gt; (a -&gt; a -&gt; a) -&gt; [a] -&gt; a","name":"foldBinary","module":"IC.HashTree","link":"IC-HashTree.html#v:foldBinary"},{"display_html":"<a href=\"#v:reconstruct\">reconstruct</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; <a href=\"IC-HashTree.html#t:Hash\" title=\"IC.HashTree\">Hash</a>","name":"reconstruct","module":"IC.HashTree","link":"IC-HashTree.html#v:reconstruct"},{"display_html":"<a href=\"#v:h\">h</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"h","module":"IC.HashTree","link":"IC-HashTree.html#v:h"},{"display_html":"<a href=\"#v:domSep\">domSep</a> :: <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a> -&gt; <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a>","name":"domSep","module":"IC.HashTree","link":"IC-HashTree.html#v:domSep"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Res\">Res</a><ul class=\"subs\"><li>= <a href=\"#v:Absent\">Absent</a></li><li>| <a href=\"#v:Unknown\">Unknown</a></li><li>| <a href=\"#v:Error\">Error</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li>| <a href=\"#v:Found\">Found</a> <a href=\"IC-HashTree.html#t:Value\" title=\"IC.HashTree\">Value</a></li></ul>","name":"Res Found Absent Unknown Error","module":"IC.HashTree","link":"IC-HashTree.html#t:Res"},{"display_html":"<a href=\"#v:lookupPath\">lookupPath</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; <a href=\"IC-HashTree.html#t:Path\" title=\"IC.HashTree\">Path</a> -&gt; <a href=\"IC-HashTree.html#t:Res\" title=\"IC.HashTree\">Res</a>","name":"lookupPath","module":"IC.HashTree","link":"IC-HashTree.html#v:lookupPath"},{"display_html":"<a href=\"#v:flatten\">flatten</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; [<a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a>]","name":"flatten","module":"IC.HashTree","link":"IC-HashTree.html#v:flatten"},{"display_html":"<a href=\"#v:prune\">prune</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; [<a href=\"IC-HashTree.html#t:Path\" title=\"IC.HashTree\">Path</a>] -&gt; <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a>","name":"prune","module":"IC.HashTree","link":"IC-HashTree.html#v:prune"},{"display_html":"<a href=\"#v:wellFormed\">wellFormed</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> ()","name":"wellFormed","module":"IC.HashTree","link":"IC-HashTree.html#v:wellFormed"},{"display_html":"<a href=\"#v:wellFormedForest\">wellFormedForest</a> :: [<a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> ()","name":"wellFormedForest","module":"IC.HashTree","link":"IC-HashTree.html#v:wellFormedForest"},{"display_html":"<a href=\"#v:isInOrder\">isInOrder</a> :: [<a href=\"IC-HashTree.html#t:Label\" title=\"IC.HashTree\">Label</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> ()","name":"isInOrder","module":"IC.HashTree","link":"IC-HashTree.html#v:isInOrder"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Certificate\">Certificate</a> = <a href=\"#v:Certificate\">Certificate</a> {<ul class=\"subs\"><li><a href=\"#v:cert_tree\">cert_tree</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a></li><li><a href=\"#v:cert_sig\">cert_sig</a> :: <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a></li><li><a href=\"#v:cert_delegation\">cert_delegation</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Certificate.html#t:Delegation\" title=\"IC.Certificate\">Delegation</a></li></ul>}","name":"Certificate Certificate cert_delegation cert_sig cert_tree","module":"IC.Certificate","link":"IC-Certificate.html#t:Certificate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Delegation\">Delegation</a> = <a href=\"#v:Delegation\">Delegation</a> {<ul class=\"subs\"><li><a href=\"#v:del_subnet_id\">del_subnet_id</a> :: <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a></li><li><a href=\"#v:del_certificate\">del_certificate</a> :: <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a></li></ul>}","name":"Delegation Delegation del_certificate del_subnet_id","module":"IC.Certificate","link":"IC-Certificate.html#t:Delegation"},{"display_html":"<a href=\"#v:encodeHashTree\">encodeHashTree</a> :: <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; Term","name":"encodeHashTree","module":"IC.HashTree.CBOR","link":"IC-HashTree-CBOR.html#v:encodeHashTree"},{"display_html":"<a href=\"#v:parseHashTree\">parseHashTree</a> :: Term -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a>","name":"parseHashTree","module":"IC.HashTree.CBOR","link":"IC-HashTree-CBOR.html#v:parseHashTree"},{"display_html":"<a href=\"#v:encodeCert\">encodeCert</a> :: <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a>","name":"encodeCert","module":"IC.Certificate.CBOR","link":"IC-Certificate-CBOR.html#v:encodeCert"},{"display_html":"<a href=\"#v:decodeCert\">decodeCert</a> :: <a href=\"IC-HashTree.html#t:Blob\" title=\"IC.HashTree\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a>","name":"decodeCert","module":"IC.Certificate.CBOR","link":"IC-Certificate-CBOR.html#v:decodeCert"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Blob\">Blob</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"Blob","module":"IC.Id.Forms","link":"IC-Id-Forms.html#t:Blob"},{"display_html":"<a href=\"#v:mkOpaqueId\">mkOpaqueId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"mkOpaqueId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:mkOpaqueId"},{"display_html":"<a href=\"#v:isOpaqueId\">isOpaqueId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isOpaqueId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:isOpaqueId"},{"display_html":"<a href=\"#v:mkSelfAuthenticatingId\">mkSelfAuthenticatingId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"mkSelfAuthenticatingId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:mkSelfAuthenticatingId"},{"display_html":"<a href=\"#v:isSelfAuthenticatingId\">isSelfAuthenticatingId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isSelfAuthenticatingId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:isSelfAuthenticatingId"},{"display_html":"<a href=\"#v:mkDerivedId\">mkDerivedId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"mkDerivedId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:mkDerivedId"},{"display_html":"<a href=\"#v:isDerivedId\">isDerivedId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isDerivedId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:isDerivedId"},{"display_html":"<a href=\"#v:isAnonymousId\">isAnonymousId</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isAnonymousId","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:isAnonymousId"},{"display_html":"<a href=\"#v:len_prefixed\">len_prefixed</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"len_prefixed","module":"IC.Id.Forms","link":"IC-Id-Forms.html#v:len_prefixed"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SnapshotAble\">SnapshotAble</a> i <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SnapshotOf\">SnapshotOf</a> i :: *</li><li><a href=\"#v:persist\">persist</a> :: i s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Purify.html#t:SnapshotOf\" title=\"IC.Purify\">SnapshotOf</a> i)</li><li><a href=\"#v:recreate\">recreate</a> :: <a href=\"IC-Purify.html#t:SnapshotOf\" title=\"IC.Purify\">SnapshotOf</a> i -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (i s)</li></ul>","name":"SnapshotAble recreate persist SnapshotOf","module":"IC.Purify","link":"IC-Purify.html#t:SnapshotAble"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Purify\">Purify</a> i a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:create\">create</a> :: (<span class=\"keyword\">forall</span> s. <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (i s)) -&gt; a</li><li><a href=\"#v:createMaybe\">createMaybe</a> :: (<span class=\"keyword\">forall</span> s. <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (b, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> c (i s))) -&gt; (b, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> c a)</li><li><a href=\"#v:perform\">perform</a> :: (<span class=\"keyword\">forall</span> s. i s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s b) -&gt; a -&gt; (a, b)</li></ul>","name":"Purify perform createMaybe create","module":"IC.Purify","link":"IC-Purify.html#t:Purify"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Snapshot\">Snapshot</a> a = <a href=\"#v:Snapshot\">Snapshot</a> a","name":"Snapshot Snapshot","module":"IC.Purify","link":"IC-Purify.html#t:Snapshot"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Replay\">Replay</a> i = <a href=\"#v:Replay\">Replay</a> (<span class=\"keyword\">forall</span> s. <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (i s))","name":"Replay Replay","module":"IC.Purify","link":"IC-Purify.html#t:Replay"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Store\">Store</a> a","name":"Store","module":"IC.StateFile","link":"IC-StateFile.html#t:Store"},{"display_html":"<a href=\"#v:withStore\">withStore</a> :: Serialise a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; (<a href=\"IC-StateFile.html#t:Store\" title=\"IC.StateFile\">Store</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"withStore","module":"IC.StateFile","link":"IC-StateFile.html#v:withStore"},{"display_html":"<a href=\"#v:modifyStore\">modifyStore</a> :: Serialise a =&gt; <a href=\"IC-StateFile.html#t:Store\" title=\"IC.StateFile\">Store</a> a -&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> a <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"modifyStore","module":"IC.StateFile","link":"IC-StateFile.html#v:modifyStore"},{"display_html":"<a href=\"#v:peekStore\">peekStore</a> :: <a href=\"IC-StateFile.html#t:Store\" title=\"IC.StateFile\">Store</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"peekStore","module":"IC.StateFile","link":"IC-StateFile.html#v:peekStore"},{"display_html":"<a href=\"#v:blsTests\">blsTests</a> :: TestTree","name":"blsTests","module":"IC.Test.BLS","link":"IC-Test-BLS.html#v:blsTests"},{"display_html":"<a href=\"#v:ecdsaTests\">ecdsaTests</a> :: TestTree","name":"ecdsaTests","module":"IC.Test.ECDSA","link":"IC-Test-ECDSA.html#v:ecdsaTests"},{"display_html":"<a href=\"#v:hashTreeTests\">hashTreeTests</a> :: TestTree","name":"hashTreeTests","module":"IC.Test.HashTree","link":"IC-Test-HashTree.html#v:hashTreeTests"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Endpoint\">Endpoint</a> = <a href=\"#v:Endpoint\">Endpoint</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"Endpoint Endpoint","module":"IC.Test.Options","link":"IC-Test-Options.html#t:Endpoint"},{"display_html":"<a href=\"#v:endpointOption\">endpointOption</a> :: OptionDescription","name":"endpointOption","module":"IC.Test.Options","link":"IC-Test-Options.html#v:endpointOption"},{"display_html":"<a href=\"#v:secp256k1Tests\">secp256k1Tests</a> :: TestTree","name":"secp256k1Tests","module":"IC.Test.Secp256k1","link":"IC-Test-Secp256k1.html#v:secp256k1Tests"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:T\">T</a><ul class=\"subs\"><li>= <a href=\"#v:I\">I</a></li><li>| <a href=\"#v:I64\">I64</a></li><li>| <a href=\"#v:B\">B</a></li></ul>","name":"T I64 I B","module":"IC.Test.Universal","link":"IC-Test-Universal.html#t:T"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Exp\">Exp</a> (result :: <a href=\"IC-Test-Universal.html#t:T\" title=\"IC.Test.Universal\">T</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Exp\">Exp</a> :: <a href=\"https://hackage.haskell.org/package/binary-0.8.7.0/docs/Data-Binary-Builder.html#t:Builder\" title=\"Data.Binary.Builder\">Builder</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> a</li></ul>","name":"Exp Exp","module":"IC.Test.Universal","link":"IC-Test-Universal.html#t:Exp"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Prog\">Prog</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Prog\">Prog</a> :: <a href=\"https://hackage.haskell.org/package/binary-0.8.7.0/docs/Data-Binary-Builder.html#t:Builder\" title=\"Data.Binary.Builder\">Builder</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a></li></ul>","name":"Prog Prog","module":"IC.Test.Universal","link":"IC-Test-Universal.html#t:Prog"},{"display_html":"<a href=\"#v:run\">run</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"run","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:run"},{"display_html":"<a href=\"#v:-62--62--62-\">(&gt;&gt;&gt;)</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":">>>","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:-62--62--62-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Op\">Op</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mkOp\">mkOp</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; <a href=\"https://hackage.haskell.org/package/binary-0.8.7.0/docs/Data-Binary-Builder.html#t:Builder\" title=\"Data.Binary.Builder\">Builder</a> -&gt; a</li></ul>","name":"Op mkOp","module":"IC.Test.Universal","link":"IC-Test-Universal.html#t:Op"},{"display_html":"<a href=\"#v:op\">op</a> :: <a href=\"IC-Test-Universal.html#t:Op\" title=\"IC.Test.Universal\">Op</a> a =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a> -&gt; a","name":"op","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:op"},{"display_html":"<a href=\"#v:noop\">noop</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"noop","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:noop"},{"display_html":"<a href=\"#v:ignore\">ignore</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> t -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"ignore","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:ignore"},{"display_html":"<a href=\"#v:int\">int</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"int","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:int"},{"display_html":"<a href=\"#v:int64\">int64</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"int64","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:int64"},{"display_html":"<a href=\"#v:bytes\">bytes</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"bytes","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:bytes"},{"display_html":"<a href=\"#v:replyDataAppend\">replyDataAppend</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"replyDataAppend","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:replyDataAppend"},{"display_html":"<a href=\"#v:reply\">reply</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"reply","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:reply"},{"display_html":"<a href=\"#v:self\">self</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"self","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:self"},{"display_html":"<a href=\"#v:reject\">reject</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"reject","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:reject"},{"display_html":"<a href=\"#v:caller\">caller</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"caller","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:caller"},{"display_html":"<a href=\"#v:reject_msg\">reject_msg</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"reject_msg","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:reject_msg"},{"display_html":"<a href=\"#v:reject_code\">reject_code</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"reject_code","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:reject_code"},{"display_html":"<a href=\"#v:i2b\">i2b</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"i2b","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:i2b"},{"display_html":"<a href=\"#v:i64tob\">i64tob</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"i64tob","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:i64tob"},{"display_html":"<a href=\"#v:argData\">argData</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"argData","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:argData"},{"display_html":"<a href=\"#v:cat\">cat</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"cat","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:cat"},{"display_html":"<a href=\"#v:stableSize\">stableSize</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"stableSize","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:stableSize"},{"display_html":"<a href=\"#v:stableGrow\">stableGrow</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"stableGrow","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:stableGrow"},{"display_html":"<a href=\"#v:stableRead\">stableRead</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"stableRead","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:stableRead"},{"display_html":"<a href=\"#v:stableWrite\">stableWrite</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"stableWrite","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:stableWrite"},{"display_html":"<a href=\"#v:getTime\">getTime</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"getTime","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getTime"},{"display_html":"<a href=\"#v:getAvailableCycles\">getAvailableCycles</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"getAvailableCycles","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getAvailableCycles"},{"display_html":"<a href=\"#v:getBalance\">getBalance</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"getBalance","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getBalance"},{"display_html":"<a href=\"#v:getRefund\">getRefund</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"getRefund","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getRefund"},{"display_html":"<a href=\"#v:acceptCycles\">acceptCycles</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a>","name":"acceptCycles","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:acceptCycles"},{"display_html":"<a href=\"#v:debugPrint\">debugPrint</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"debugPrint","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:debugPrint"},{"display_html":"<a href=\"#v:trap\">trap</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"trap","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:trap"},{"display_html":"<a href=\"#v:setGlobal\">setGlobal</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"setGlobal","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:setGlobal"},{"display_html":"<a href=\"#v:getGlobal\">getGlobal</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"getGlobal","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getGlobal"},{"display_html":"<a href=\"#v:badPrint\">badPrint</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"badPrint","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:badPrint"},{"display_html":"<a href=\"#v:onPreUpgrade\">onPreUpgrade</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"onPreUpgrade","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:onPreUpgrade"},{"display_html":"<a href=\"#v:callNew\">callNew</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"callNew","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callNew"},{"display_html":"<a href=\"#v:callDataAppend\">callDataAppend</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"callDataAppend","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callDataAppend"},{"display_html":"<a href=\"#v:callCyclesAdd\">callCyclesAdd</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I64\" title=\"IC.Test.Universal\">I64</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"callCyclesAdd","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callCyclesAdd"},{"display_html":"<a href=\"#v:callPerform\">callPerform</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"callPerform","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callPerform"},{"display_html":"<a href=\"#v:setCertifiedData\">setCertifiedData</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"setCertifiedData","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:setCertifiedData"},{"display_html":"<a href=\"#v:getCertificatePresent\">getCertificatePresent</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"getCertificatePresent","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getCertificatePresent"},{"display_html":"<a href=\"#v:getCertificate\">getCertificate</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"getCertificate","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getCertificate"},{"display_html":"<a href=\"#v:getStatus\">getStatus</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:I\" title=\"IC.Test.Universal\">I</a>","name":"getStatus","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:getStatus"},{"display_html":"<a href=\"#v:acceptMessage\">acceptMessage</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"acceptMessage","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:acceptMessage"},{"display_html":"<a href=\"#v:onInspectMessage\">onInspectMessage</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"onInspectMessage","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:onInspectMessage"},{"display_html":"<a href=\"#v:methodName\">methodName</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"methodName","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:methodName"},{"display_html":"<a href=\"#v:trapIfEq\">trapIfEq</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"trapIfEq","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:trapIfEq"},{"display_html":"<a href=\"#v:callOnCleanup\">callOnCleanup</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"callOnCleanup","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callOnCleanup"},{"display_html":"<a href=\"#v:callback\">callback</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a> -&gt; <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a>","name":"callback","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:callback"},{"display_html":"<a href=\"#v:replyData\">replyData</a> :: <a href=\"IC-Test-Universal.html#t:Exp\" title=\"IC.Test.Universal\">Exp</a> '<a href=\"IC-Test-Universal.html#v:B\" title=\"IC.Test.Universal\">B</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"replyData","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:replyData"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallArgs\">CallArgs</a> = <a href=\"#v:CallArgs\">CallArgs</a> {<ul class=\"subs\"><li><a href=\"#v:on_reply\">on_reply</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a></li><li><a href=\"#v:on_reject\">on_reject</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a></li><li><a href=\"#v:on_cleanup\">on_cleanup</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a></li><li><a href=\"#v:other_side\">other_side</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a></li><li><a href=\"#v:cycles\">cycles</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:icpts\">icpts</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li></ul>}","name":"CallArgs CallArgs icpts cycles other_side on_cleanup on_reject on_reply","module":"IC.Test.Universal","link":"IC-Test-Universal.html#t:CallArgs"},{"display_html":"<a href=\"#v:inter_call\">inter_call</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Test-Universal.html#t:CallArgs\" title=\"IC.Test.Universal\">CallArgs</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"inter_call","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:inter_call"},{"display_html":"<a href=\"#v:inter_update\">inter_update</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Test-Universal.html#t:CallArgs\" title=\"IC.Test.Universal\">CallArgs</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"inter_update","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:inter_update"},{"display_html":"<a href=\"#v:inter_query\">inter_query</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Test-Universal.html#t:CallArgs\" title=\"IC.Test.Universal\">CallArgs</a> -&gt; <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"inter_query","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:inter_query"},{"display_html":"<a href=\"#v:defArgs\">defArgs</a> :: <a href=\"IC-Test-Universal.html#t:CallArgs\" title=\"IC.Test.Universal\">CallArgs</a>","name":"defArgs","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:defArgs"},{"display_html":"<a href=\"#v:defaultOtherSide\">defaultOtherSide</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"defaultOtherSide","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:defaultOtherSide"},{"display_html":"<a href=\"#v:relayReply\">relayReply</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"relayReply","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:relayReply"},{"display_html":"<a href=\"#v:relayReject\">relayReject</a> :: <a href=\"IC-Test-Universal.html#t:Prog\" title=\"IC.Test.Universal\">Prog</a>","name":"relayReject","module":"IC.Test.Universal","link":"IC-Test-Universal.html#v:relayReject"},{"display_html":"<a href=\"#v:webAuthnTests\">webAuthnTests</a> :: TestTree","name":"webAuthnTests","module":"IC.Test.WebAuthn","link":"IC-Test-WebAuthn.html#v:webAuthnTests"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:-8614-\">(&#8614;)</a> = <a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a>","name":"↦","module":"IC.Types","link":"IC-Types.html#t:-8614-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Blob\">Blob</a> = <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"Blob","module":"IC.Types","link":"IC-Types.html#t:Blob"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PublicKey\">PublicKey</a> = <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"PublicKey","module":"IC.Types","link":"IC-Types.html#t:PublicKey"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:EntityId\">EntityId</a> = <a href=\"#v:EntityId\">EntityId</a> {<ul class=\"subs\"><li><a href=\"#v:rawEntityId\">rawEntityId</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li></ul>}","name":"EntityId EntityId rawEntityId","module":"IC.Types","link":"IC-Types.html#t:EntityId"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CanisterId\">CanisterId</a> = <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"CanisterId","module":"IC.Types","link":"IC-Types.html#t:CanisterId"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SubnetId\">SubnetId</a> = <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"SubnetId","module":"IC.Types","link":"IC-Types.html#t:SubnetId"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UserId\">UserId</a> = <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"UserId","module":"IC.Types","link":"IC-Types.html#t:UserId"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MethodName\">MethodName</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"MethodName","module":"IC.Types","link":"IC-Types.html#t:MethodName"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RequestID\">RequestID</a> = <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"RequestID","module":"IC.Types","link":"IC-Types.html#t:RequestID"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Cycles\">Cycles</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"Cycles","module":"IC.Types","link":"IC-Types.html#t:Cycles"},{"display_html":"<a href=\"#v:prettyBlob\">prettyBlob</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettyBlob","module":"IC.Types","link":"IC-Types.html#v:prettyBlob"},{"display_html":"<a href=\"#v:prettyID\">prettyID</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettyID","module":"IC.Types","link":"IC-Types.html#v:prettyID"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Responded\">Responded</a> = <a href=\"#v:Responded\">Responded</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"Responded Responded","module":"IC.Types","link":"IC-Types.html#t:Responded"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Timestamp\">Timestamp</a> = <a href=\"#v:Timestamp\">Timestamp</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"Timestamp Timestamp","module":"IC.Types","link":"IC-Types.html#t:Timestamp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RejectCode\">RejectCode</a><ul class=\"subs\"><li>= <a href=\"#v:RC_SYS_FATAL\">RC_SYS_FATAL</a></li><li>| <a href=\"#v:RC_SYS_TRANSIENT\">RC_SYS_TRANSIENT</a></li><li>| <a href=\"#v:RC_DESTINATION_INVALID\">RC_DESTINATION_INVALID</a></li><li>| <a href=\"#v:RC_CANISTER_REJECT\">RC_CANISTER_REJECT</a></li><li>| <a href=\"#v:RC_CANISTER_ERROR\">RC_CANISTER_ERROR</a></li></ul>","name":"RejectCode RC_CANISTER_ERROR RC_CANISTER_REJECT RC_DESTINATION_INVALID RC_SYS_TRANSIENT RC_SYS_FATAL","module":"IC.Types","link":"IC-Types.html#t:RejectCode"},{"display_html":"<a href=\"#v:rejectCode\">rejectCode</a> :: <a href=\"IC-Types.html#t:RejectCode\" title=\"IC.Types\">RejectCode</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>","name":"rejectCode","module":"IC.Types","link":"IC-Types.html#v:rejectCode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Response\">Response</a><ul class=\"subs\"><li>= <a href=\"#v:Reply\">Reply</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li>| <a href=\"#v:Reject\">Reject</a> (<a href=\"IC-Types.html#t:RejectCode\" title=\"IC.Types\">RejectCode</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>)</li></ul>","name":"Response Reject Reply","module":"IC.Types","link":"IC-Types.html#t:Response"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Status\">Status</a><ul class=\"subs\"><li>= <a href=\"#v:Running\">Running</a></li><li>| <a href=\"#v:Stopping\">Stopping</a></li><li>| <a href=\"#v:Stopped\">Stopped</a></li></ul>","name":"Status Stopping Running Stopped","module":"IC.Types","link":"IC-Types.html#t:Status"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Env\">Env</a> = <a href=\"#v:Env\">Env</a> {<ul class=\"subs\"><li><a href=\"#v:env_self\">env_self</a> :: <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a></li><li><a href=\"#v:env_time\">env_time</a> :: <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a></li><li><a href=\"#v:env_balance\">env_balance</a> :: <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li><li><a href=\"#v:env_status\">env_status</a> :: <a href=\"IC-Types.html#t:Status\" title=\"IC.Types\">Status</a></li><li><a href=\"#v:env_certificate\">env_certificate</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li></ul>}","name":"Env Env env_certificate env_status env_balance env_time env_self","module":"IC.Types","link":"IC-Types.html#t:Env"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TrapOr\">TrapOr</a> a<ul class=\"subs\"><li>= <a href=\"#v:Trap\">Trap</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li>| <a href=\"#v:Return\">Return</a> a</li></ul>","name":"TrapOr Return Trap","module":"IC.Types","link":"IC-Types.html#t:TrapOr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WasmClosure\">WasmClosure</a> = <a href=\"#v:WasmClosure\">WasmClosure</a> {<ul class=\"subs\"><li><a href=\"#v:closure_idx\">closure_idx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li><a href=\"#v:closure_env\">closure_env</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li></ul>}","name":"WasmClosure WasmClosure closure_env closure_idx","module":"IC.Types","link":"IC-Types.html#t:WasmClosure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Callback\">Callback</a> = <a href=\"#v:Callback\">Callback</a> {<ul class=\"subs\"><li><a href=\"#v:reply_callback\">reply_callback</a> :: <a href=\"IC-Types.html#t:WasmClosure\" title=\"IC.Types\">WasmClosure</a></li><li><a href=\"#v:reject_callback\">reject_callback</a> :: <a href=\"IC-Types.html#t:WasmClosure\" title=\"IC.Types\">WasmClosure</a></li><li><a href=\"#v:cleanup_callback\">cleanup_callback</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Types.html#t:WasmClosure\" title=\"IC.Types\">WasmClosure</a></li></ul>}","name":"Callback Callback cleanup_callback reject_callback reply_callback","module":"IC.Types","link":"IC-Types.html#t:Callback"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MethodCall\">MethodCall</a> = <a href=\"#v:MethodCall\">MethodCall</a> {<ul class=\"subs\"><li><a href=\"#v:call_callee\">call_callee</a> :: <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a></li><li><a href=\"#v:call_method_name\">call_method_name</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a></li><li><a href=\"#v:call_arg\">call_arg</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li><a href=\"#v:call_callback\">call_callback</a> :: <a href=\"IC-Types.html#t:Callback\" title=\"IC.Types\">Callback</a></li><li><a href=\"#v:call_transferred_cycles\">call_transferred_cycles</a> :: <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li></ul>}","name":"MethodCall MethodCall call_transferred_cycles call_callback call_arg call_method_name call_callee","module":"IC.Types","link":"IC-Types.html#t:MethodCall"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ExistingCanisters\">ExistingCanisters</a> = [<a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a>]","name":"ExistingCanisters","module":"IC.Types","link":"IC-Types.html#t:ExistingCanisters"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CanisterActions\">CanisterActions</a> = <a href=\"#v:CanisterActions\">CanisterActions</a> {<ul class=\"subs\"><li><a href=\"#v:set_certified_data\">set_certified_data</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li></ul>}","name":"CanisterActions CanisterActions set_certified_data","module":"IC.Types","link":"IC-Types.html#t:CanisterActions"},{"display_html":"<a href=\"#v:noCanisterActions\">noCanisterActions</a> :: <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>","name":"noCanisterActions","module":"IC.Types","link":"IC-Types.html#v:noCanisterActions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallActions\">CallActions</a> = <a href=\"#v:CallActions\">CallActions</a> {<ul class=\"subs\"><li><a href=\"#v:ca_new_calls\">ca_new_calls</a> :: [<a href=\"IC-Types.html#t:MethodCall\" title=\"IC.Types\">MethodCall</a>]</li><li><a href=\"#v:ca_accept\">ca_accept</a> :: <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li><li><a href=\"#v:ca_response\">ca_response</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a></li></ul>}","name":"CallActions CallActions ca_response ca_accept ca_new_calls","module":"IC.Types","link":"IC-Types.html#t:CallActions"},{"display_html":"<a href=\"#v:noCallActions\">noCallActions</a> :: <a href=\"IC-Types.html#t:CallActions\" title=\"IC.Types\">CallActions</a>","name":"noCallActions","module":"IC.Types","link":"IC-Types.html#v:noCallActions"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UpdateResult\">UpdateResult</a> = (<a href=\"IC-Types.html#t:CallActions\" title=\"IC.Types\">CallActions</a>, <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>)","name":"UpdateResult","module":"IC.Types","link":"IC-Types.html#t:UpdateResult"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StableMemory\">StableMemory</a> = <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"StableMemory","module":"IC.Types","link":"IC-Types.html#t:StableMemory"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ValidityPred\">ValidityPred</a> a = <span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Error-Class.html#t:MonadError\" title=\"Control.Monad.Error.Class\">MonadError</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> m =&gt; a -&gt; m ()","name":"ValidityPred","module":"IC.Types","link":"IC-Types.html#t:ValidityPred"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EnvValidity\">EnvValidity</a> = <a href=\"#v:EnvValidity\">EnvValidity</a> {<ul class=\"subs\"><li><a href=\"#v:valid_when\">valid_when</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a></li><li><a href=\"#v:valid_for\">valid_for</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a></li><li><a href=\"#v:valid_where\">valid_where</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a></li></ul>}","name":"EnvValidity EnvValidity valid_where valid_for valid_when","module":"IC.Types","link":"IC-Types.html#t:EnvValidity"},{"display_html":"<a href=\"#v:validWhen\">validWhen</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a>","name":"validWhen","module":"IC.Types","link":"IC-Types.html#v:validWhen"},{"display_html":"<a href=\"#v:validFor\">validFor</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a>","name":"validFor","module":"IC.Types","link":"IC-Types.html#v:validFor"},{"display_html":"<a href=\"#v:validWhere\">validWhere</a> :: <a href=\"IC-Types.html#t:ValidityPred\" title=\"IC.Types\">ValidityPred</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a>","name":"validWhere","module":"IC.Types","link":"IC-Types.html#v:validWhere"},{"display_html":"<a href=\"#v:principalToEntityId\">principalToEntityId</a> :: Principal -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"principalToEntityId","module":"IC.Management","link":"IC-Management.html#v:principalToEntityId"},{"display_html":"<a href=\"#v:entityIdToPrincipal\">entityIdToPrincipal</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; Principal","name":"entityIdToPrincipal","module":"IC.Management","link":"IC-Management.html#v:entityIdToPrincipal"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InstallMode\">InstallMode</a> = Var ((.+) ((.==) &quot;install&quot; ()) ((.+) ((.==) &quot;reinstall&quot; ()) ((.+) ((.==) &quot;upgrade&quot; ()) Empty)))","name":"InstallMode","module":"IC.Management","link":"IC-Management.html#t:InstallMode"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RunState\">RunState</a> = Var ((.+) ((.==) &quot;running&quot; ()) ((.+) ((.==) &quot;stopping&quot; ()) ((.+) ((.==) &quot;stopped&quot; ()) Empty)))","name":"RunState","module":"IC.Management","link":"IC-Management.html#t:RunState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Settings\">Settings</a> = Rec ((.+) ((.==) &quot;controllers&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Vector Principal))) ((.+) ((.==) &quot;compute_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;memory_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;freezing_threshold&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) Empty))))","name":"Settings","module":"IC.Management","link":"IC-Management.html#t:Settings"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ICManagement\">ICManagement</a> m = (.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.+) ((.==) &quot;create_canister&quot; (Rec ((.+) ((.==) &quot;settings&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Rec ((.+) ((.==) &quot;controllers&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Vector Principal))) ((.+) ((.==) &quot;compute_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;memory_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;freezing_threshold&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) Empty))))))) Empty) -&gt; m (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty)))) ((.==) &quot;update_settings&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) ((.+) ((.==) &quot;settings&quot; (Rec ((.+) ((.==) &quot;controllers&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Vector Principal))) ((.+) ((.==) &quot;compute_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;memory_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;freezing_threshold&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) Empty)))))) Empty)) -&gt; m ()))) ((.==) &quot;install_code&quot; (Rec ((.+) ((.==) &quot;mode&quot; (Var ((.+) ((.==) &quot;install&quot; ()) ((.+) ((.==) &quot;reinstall&quot; ()) ((.+) ((.==) &quot;upgrade&quot; ()) Empty))))) ((.+) ((.==) &quot;canister_id&quot; Principal) ((.+) ((.==) &quot;wasm_module&quot; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>) ((.+) ((.==) &quot;arg&quot; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>) Empty)))) -&gt; m ()))) ((.==) &quot;uninstall_code&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m ()))) ((.==) &quot;start_canister&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m ()))) ((.==) &quot;stop_canister&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m ()))) ((.==) &quot;canister_status&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m (Rec ((.+) ((.==) &quot;status&quot; (Var ((.+) ((.==) &quot;running&quot; ()) ((.+) ((.==) &quot;stopping&quot; ()) ((.+) ((.==) &quot;stopped&quot; ()) Empty))))) ((.+) ((.==) &quot;settings&quot; (Rec ((.+) ((.==) &quot;controllers&quot; (Vector Principal)) ((.+) ((.==) &quot;compute_allocation&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) ((.+) ((.==) &quot;memory_allocation&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) ((.+) ((.==) &quot;freezing_threshold&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) Empty)))))) ((.+) ((.==) &quot;module_hash&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)) ((.+) ((.==) &quot;memory_size&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) ((.+) ((.==) &quot;cycles&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) Empty))))))))) ((.==) &quot;delete_canister&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m ()))) ((.==) &quot;deposit_cycles&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty) -&gt; m ()))) ((.==) &quot;raw_rand&quot; (() -&gt; m <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>))) ((.==) &quot;provisional_create_canister_with_cycles&quot; (Rec ((.+) ((.==) &quot;amount&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;settings&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Rec ((.+) ((.==) &quot;controllers&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (Vector Principal))) ((.+) ((.==) &quot;compute_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;memory_allocation&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) ((.+) ((.==) &quot;freezing_threshold&quot; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>)) Empty))))))) Empty)) -&gt; m (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) Empty))))) ((.==) &quot;provisional_top_up_canister&quot; (Rec ((.+) ((.==) &quot;canister_id&quot; Principal) ((.+) ((.==) &quot;amount&quot; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>) Empty)) -&gt; m ()))","name":"ICManagement","module":"IC.Management","link":"IC-Management.html#t:ICManagement"},{"display_html":"<a href=\"#v:managementMethods\">managementMethods</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]","name":"managementMethods","module":"IC.Management","link":"IC-Management.html#v:managementMethods"},{"display_html":"<a href=\"#v:freshId\">freshId</a> :: [<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>] -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"freshId","module":"IC.Id.Fresh","link":"IC-Id-Fresh.html#v:freshId"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:CertVal\">CertVal</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCertVal\">toCertVal</a> :: a -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li><a href=\"#v:fromCertVal\">fromCertVal</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> a</li></ul>","name":"CertVal toCertVal fromCertVal","module":"IC.Certificate.Value","link":"IC-Certificate-Value.html#t:CertVal"},{"display_html":"<a href=\"#v:validateCertificate\">validateCertificate</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"validateCertificate","module":"IC.Certificate.Validate","link":"IC-Certificate-Validate.html#v:validateCertificate"},{"display_html":"<a href=\"#v:genPublicKey\">genPublicKey</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"genPublicKey","module":"IC.Crypto.CanisterSig","link":"IC-Crypto-CanisterSig.html#v:genPublicKey"},{"display_html":"<a href=\"#v:genSig\">genSig</a> :: <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; <a href=\"IC-HashTree.html#t:HashTree\" title=\"IC.HashTree\">HashTree</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"genSig","module":"IC.Crypto.CanisterSig","link":"IC-Crypto-CanisterSig.html#v:genSig"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"verify","module":"IC.Crypto.CanisterSig","link":"IC-Crypto-CanisterSig.html#v:verify"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SecretKey\">SecretKey</a><ul class=\"subs\"><li>= <a href=\"#v:Ed25519\">Ed25519</a> <a href=\"IC-Crypto-Ed25519.html#t:SecretKey\" title=\"IC.Crypto.Ed25519\">SecretKey</a></li><li>| <a href=\"#v:ECDSA\">ECDSA</a> <a href=\"IC-Crypto-ECDSA.html#t:SecretKey\" title=\"IC.Crypto.ECDSA\">SecretKey</a></li><li>| <a href=\"#v:Secp256k1\">Secp256k1</a> <a href=\"IC-Crypto-Secp256k1.html#t:SecretKey\" title=\"IC.Crypto.Secp256k1\">SecretKey</a></li><li>| <a href=\"#v:WebAuthn\">WebAuthn</a> <a href=\"IC-Crypto-WebAuthn.html#t:SecretKey\" title=\"IC.Crypto.WebAuthn\">SecretKey</a></li><li>| <a href=\"#v:BLS\">BLS</a> <a href=\"IC-Crypto-BLS.html#t:SecretKey\" title=\"IC.Crypto.BLS\">SecretKey</a></li></ul>","name":"SecretKey Ed25519 WebAuthn ECDSA Secp256k1 BLS","module":"IC.Crypto","link":"IC-Crypto.html#t:SecretKey"},{"display_html":"<a href=\"#v:createSecretKeyEd25519\">createSecretKeyEd25519</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeyEd25519","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeyEd25519"},{"display_html":"<a href=\"#v:createSecretKeyWebAuthnECDSA\">createSecretKeyWebAuthnECDSA</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeyWebAuthnECDSA","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeyWebAuthnECDSA"},{"display_html":"<a href=\"#v:createSecretKeyWebAuthnRSA\">createSecretKeyWebAuthnRSA</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeyWebAuthnRSA","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeyWebAuthnRSA"},{"display_html":"<a href=\"#v:createSecretKeyECDSA\">createSecretKeyECDSA</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeyECDSA","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeyECDSA"},{"display_html":"<a href=\"#v:createSecretKeySecp256k1\">createSecretKeySecp256k1</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeySecp256k1","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeySecp256k1"},{"display_html":"<a href=\"#v:createSecretKeyBLS\">createSecretKeyBLS</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"createSecretKeyBLS","module":"IC.Crypto","link":"IC-Crypto.html#v:createSecretKeyBLS"},{"display_html":"<a href=\"#v:toPublicKey\">toPublicKey</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"toPublicKey","module":"IC.Crypto","link":"IC-Crypto.html#v:toPublicKey"},{"display_html":"<a href=\"#v:signPure\">signPure</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"signPure","module":"IC.Crypto","link":"IC-Crypto.html#v:signPure"},{"display_html":"<a href=\"#v:sign\">sign</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"sign","module":"IC.Crypto","link":"IC-Crypto.html#v:sign"},{"display_html":"<a href=\"#v:verify\">verify</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> ()","name":"verify","module":"IC.Crypto","link":"IC-Crypto.html#v:verify"},{"display_html":"<a href=\"#v:encodePrincipalList\">encodePrincipalList</a> :: [<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>] -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"encodePrincipalList","module":"IC.CBOR.Utils","link":"IC-CBOR-Utils.html#v:encodePrincipalList"},{"display_html":"<a href=\"#v:freshKey\">freshKey</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>","name":"freshKey","module":"IC.Utils","link":"IC-Utils.html#v:freshKey"},{"display_html":"<a href=\"#v:repeatWhileTrue\">repeatWhileTrue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; m ()","name":"repeatWhileTrue","module":"IC.Utils","link":"IC-Utils.html#v:repeatWhileTrue"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Module\">Module</a> = Module Phrase","name":"Module","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Module"},{"display_html":"<a href=\"#v:parseModule\">parseModule</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a>","name":"parseModule","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:parseModule"},{"display_html":"<a href=\"#v:exportedFunctions\">exportedFunctions</a> :: <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a> -&gt; [FuncName]","name":"exportedFunctions","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:exportedFunctions"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Import\">Import</a> s = (ModName, FuncName, <a href=\"IC-Wasm-Winter.html#t:StackType\" title=\"IC.Wasm.Winter\">StackType</a>, <a href=\"IC-Wasm-Winter.html#t:StackType\" title=\"IC.Wasm.Winter\">StackType</a>, [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>] -&gt; <a href=\"IC-Wasm-Winter.html#t:HostFunc\" title=\"IC.Wasm.Winter\">HostFunc</a> s)","name":"Import","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Import"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Imports\">Imports</a> s = [<a href=\"IC-Wasm-Winter.html#t:Import\" title=\"IC.Wasm.Winter\">Import</a> s]","name":"Imports","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Imports"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HostM\">HostM</a> s = <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s)","name":"HostM","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:HostM"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HostFunc\">HostFunc</a> s = <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>]","name":"HostFunc","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:HostFunc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Value\">Value</a><ul class=\"subs\"><li>= <a href=\"#v:I32\">I32</a> !<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li>| <a href=\"#v:I64\">I64</a> !<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li>| <a href=\"#v:F32\">F32</a> !<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Prelude.html#t:Float\" title=\"Prelude\">Float</a></li><li>| <a href=\"#v:F64\">F64</a> !<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Prelude.html#t:Double\" title=\"Prelude\">Double</a></li></ul>","name":"Value I64 F32 F64 I32","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Value"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StackType\">StackType</a> = [<a href=\"IC-Wasm-Winter.html#t:ValueType\" title=\"IC.Wasm.Winter\">ValueType</a>]","name":"StackType","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:StackType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ValueType\">ValueType</a><ul class=\"subs\"><li>= <a href=\"#v:I32Type\">I32Type</a></li><li>| <a href=\"#v:I64Type\">I64Type</a></li><li>| <a href=\"#v:F32Type\">F32Type</a></li><li>| <a href=\"#v:F64Type\">F64Type</a></li></ul>","name":"ValueType F32Type F64Type I32Type I64Type","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:ValueType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Address\">Address</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a>","name":"Address","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Address"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Size\">Size</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a>","name":"Size","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Size"},{"display_html":"<a href=\"#v:getBytes\">getBytes</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:Address\" title=\"IC.Wasm.Winter\">Address</a> -&gt; <a href=\"IC-Wasm-Winter.html#t:Size\" title=\"IC.Wasm.Winter\">Size</a> -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"getBytes","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:getBytes"},{"display_html":"<a href=\"#v:setBytes\">setBytes</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:Address\" title=\"IC.Wasm.Winter\">Address</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s ()","name":"setBytes","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:setBytes"},{"display_html":"<a href=\"#v:initialize\">initialize</a> :: <span class=\"keyword\">forall</span> s. <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a> -&gt; <a href=\"IC-Wasm-Winter.html#t:Imports\" title=\"IC.Wasm.Winter\">Imports</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s (<a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s)","name":"initialize","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:initialize"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Instance\">Instance</a> s = (<a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-IntMap-Strict-Internal.html#t:IntMap\" title=\"Data.IntMap.Strict.Internal\">IntMap</a> (ModuleInst Phrase (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s)), <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>)","name":"Instance","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#t:Instance"},{"display_html":"<a href=\"#v:invokeExport\">invokeExport</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; FuncName -&gt; [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>] -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>]","name":"invokeExport","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:invokeExport"},{"display_html":"<a href=\"#v:invokeTable\">invokeTable</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>] -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>]","name":"invokeTable","module":"IC.Wasm.Winter","link":"IC-Wasm-Winter.html#v:invokeTable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WasmArg\">WasmArg</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:valueType\">valueType</a> :: <a href=\"IC-Wasm-Winter.html#t:ValueType\" title=\"IC.Wasm.Winter\">ValueType</a></li><li><a href=\"#v:fromValue\">fromValue</a> :: <a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> a</li><li><a href=\"#v:toValue\">toValue</a> :: a -&gt; <a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a></li></ul>","name":"WasmArg toValue fromValue valueType","module":"IC.Wasm.Imports","link":"IC-Wasm-Imports.html#t:WasmArg"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WasmArgs\">WasmArgs</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:stackType\">stackType</a> :: <a href=\"IC-Wasm-Winter.html#t:StackType\" title=\"IC.Wasm.Winter\">StackType</a></li><li><a href=\"#v:fromValues\">fromValues</a> :: [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> a</li><li><a href=\"#v:toValues\">toValues</a> :: a -&gt; [<a href=\"IC-Wasm-Winter.html#t:Value\" title=\"IC.Wasm.Winter\">Value</a>]</li></ul>","name":"WasmArgs toValues fromValues stackType","module":"IC.Wasm.Imports","link":"IC-Wasm-Imports.html#t:WasmArgs"},{"display_html":"<a href=\"#v:argError\">argError</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> b","name":"argError","module":"IC.Wasm.Imports","link":"IC-Wasm-Imports.html#v:argError"},{"display_html":"<a href=\"#v:toImport\">toImport</a> :: <span class=\"keyword\">forall</span> a b s. (<a href=\"IC-Wasm-Imports.html#t:WasmArgs\" title=\"IC.Wasm.Imports\">WasmArgs</a> a, <a href=\"IC-Wasm-Imports.html#t:WasmArgs\" title=\"IC.Wasm.Imports\">WasmArgs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; (a -&gt; <a href=\"IC-Wasm-Winter.html#t:HostM\" title=\"IC.Wasm.Winter\">HostM</a> s b) -&gt; <a href=\"IC-Wasm-Winter.html#t:Import\" title=\"IC.Wasm.Winter\">Import</a> s","name":"toImport","module":"IC.Wasm.Imports","link":"IC-Wasm-Imports.html#v:toImport"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:PInstance\">PInstance</a> = <a href=\"#v:PInstance\">PInstance</a> (Persisted (<a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> ()))","name":"PInstance PInstance","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#t:PInstance"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PModuleInst\">PModuleInst</a> = <a href=\"#v:PModuleInst\">PModuleInst</a> {<ul class=\"subs\"><li><a href=\"#v:memories\">memories</a> :: Vector (Persisted (MemoryInst (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> ())))</li><li><a href=\"#v:globals\">globals</a> :: Vector (Persisted (GlobalInst (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> ())))</li></ul>}","name":"PModuleInst PModuleInst memories globals","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#t:PModuleInst"},{"display_html":"<a href=\"#v:persistInstance\">persistInstance</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s <a href=\"IC-Wasm-Winter-Persist.html#t:PInstance\" title=\"IC.Wasm.Winter.Persist\">PInstance</a>","name":"persistInstance","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#v:persistInstance"},{"display_html":"<a href=\"#v:resumeInstance\">resumeInstance</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s -&gt; <a href=\"IC-Wasm-Winter-Persist.html#t:PInstance\" title=\"IC.Wasm.Winter.Persist\">PInstance</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s ()","name":"resumeInstance","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#v:resumeInstance"},{"display_html":"<a href=\"#v:persistMemory\">persistMemory</a> :: MemoryInst (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"persistMemory","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#v:persistMemory"},{"display_html":"<a href=\"#v:resumeMemory\">resumeMemory</a> :: MemoryInst (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s) -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s ()","name":"resumeMemory","module":"IC.Wasm.Winter.Persist","link":"IC-Wasm-Winter-Persist.html#v:resumeMemory"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Memory\">Memory</a> s = MemoryInst (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s)","name":"Memory","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#t:Memory"},{"display_html":"<a href=\"#v:new\">new</a> :: HostM s (<a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s)","name":"new","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:new"},{"display_html":"<a href=\"#v:size\">size</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; HostM s <a href=\"IC-Wasm-Winter.html#t:Size\" title=\"IC.Wasm.Winter\">Size</a>","name":"size","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:size"},{"display_html":"<a href=\"#v:grow\">grow</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:Size\" title=\"IC.Wasm.Winter\">Size</a> -&gt; HostM s <a href=\"IC-Wasm-Winter.html#t:Size\" title=\"IC.Wasm.Winter\">Size</a>","name":"grow","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:grow"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:Address\" title=\"IC.Wasm.Winter\">Address</a> -&gt; <a href=\"IC-Wasm-Winter.html#t:Size\" title=\"IC.Wasm.Winter\">Size</a> -&gt; HostM s <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"read","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:read"},{"display_html":"<a href=\"#v:write\">write</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; <a href=\"IC-Wasm-Winter.html#t:Address\" title=\"IC.Wasm.Winter\">Address</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; HostM s ()","name":"write","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:write"},{"display_html":"<a href=\"#v:export\">export</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"export","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:export"},{"display_html":"<a href=\"#v:imp\">imp</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s ()","name":"imp","module":"IC.Wasm.WinterMemory","link":"IC-Wasm-WinterMemory.html#v:imp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CanisterEntryPoint\">CanisterEntryPoint</a> r = <span class=\"keyword\">forall</span> s. <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s r","name":"CanisterEntryPoint","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#t:CanisterEntryPoint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ImpState\">ImpState</a> s = <a href=\"#v:ImpState\">ImpState</a> {<ul class=\"subs\"><li><a href=\"#v:isESRef\">isESRef</a> :: ESRef s</li><li><a href=\"#v:isInstance\">isInstance</a> :: <a href=\"IC-Wasm-Winter.html#t:Instance\" title=\"IC.Wasm.Winter\">Instance</a> s</li><li><a href=\"#v:isStableMem\">isStableMem</a> :: <a href=\"IC-Wasm-WinterMemory.html#t:Memory\" title=\"IC.Wasm.WinterMemory\">Memory</a> s</li><li><a href=\"#v:isModule\">isModule</a> :: <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a></li></ul>}","name":"ImpState ImpState isInstance isESRef isStableMem isModule","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#t:ImpState"},{"display_html":"<a href=\"#v:rawInstantiate\">rawInstantiate</a> :: <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s))","name":"rawInstantiate","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawInstantiate"},{"display_html":"<a href=\"#v:rawInitialize\">rawInitialize</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>)","name":"rawInitialize","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawInitialize"},{"display_html":"<a href=\"#v:rawQuery\">rawQuery</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a>)","name":"rawQuery","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawQuery"},{"display_html":"<a href=\"#v:rawUpdate\">rawUpdate</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:UpdateResult\" title=\"IC.Types\">UpdateResult</a>)","name":"rawUpdate","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawUpdate"},{"display_html":"<a href=\"#v:rawCallback\">rawCallback</a> :: <a href=\"IC-Types.html#t:Callback\" title=\"IC.Types\">Callback</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:UpdateResult\" title=\"IC.Types\">UpdateResult</a>)","name":"rawCallback","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawCallback"},{"display_html":"<a href=\"#v:rawCleanup\">rawCleanup</a> :: <a href=\"IC-Types.html#t:WasmClosure\" title=\"IC.Types\">WasmClosure</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> ())","name":"rawCleanup","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawCleanup"},{"display_html":"<a href=\"#v:rawPreUpgrade\">rawPreUpgrade</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>, <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>))","name":"rawPreUpgrade","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawPreUpgrade"},{"display_html":"<a href=\"#v:rawPostUpgrade\">rawPostUpgrade</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>)","name":"rawPostUpgrade","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawPostUpgrade"},{"display_html":"<a href=\"#v:rawInspectMessage\">rawInspectMessage</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister-Imp.html#t:ImpState\" title=\"IC.Canister.Imp\">ImpState</a> s -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad-ST-Safe.html#t:ST\" title=\"Control.Monad.ST.Safe\">ST</a> s (<a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> ())","name":"rawInspectMessage","module":"IC.Canister.Imp","link":"IC-Canister-Imp.html#v:rawInspectMessage"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CanisterSnapshot\">CanisterSnapshot</a> = <a href=\"#v:CanisterSnapshot\">CanisterSnapshot</a> {<ul class=\"subs\"><li><a href=\"#v:wsModule\">wsModule</a> :: <a href=\"IC-Wasm-Winter.html#t:Module\" title=\"IC.Wasm.Winter\">Module</a></li><li><a href=\"#v:wsInstances\">wsInstances</a> :: <a href=\"IC-Wasm-Winter-Persist.html#t:PInstance\" title=\"IC.Wasm.Winter.Persist\">PInstance</a></li><li><a href=\"#v:wsStableMem\">wsStableMem</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a></li></ul>}","name":"CanisterSnapshot CanisterSnapshot wsModule wsInstances wsStableMem","module":"IC.Canister.Snapshot","link":"IC-Canister-Snapshot.html#t:CanisterSnapshot"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WasmState\">WasmState</a> = <a href=\"IC-Canister-Snapshot.html#t:CanisterSnapshot\" title=\"IC.Canister.Snapshot\">CanisterSnapshot</a>","name":"WasmState","module":"IC.Canister","link":"IC-Canister.html#t:WasmState"},{"display_html":"<a href=\"#v:parseCanister\">parseCanister</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"IC-Canister.html#t:CanisterModule\" title=\"IC.Canister\">CanisterModule</a>","name":"parseCanister","module":"IC.Canister","link":"IC-Canister.html#v:parseCanister"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CanisterModule\">CanisterModule</a> = <a href=\"#v:CanisterModule\">CanisterModule</a> {<ul class=\"subs\"><li><a href=\"#v:raw_wasm\">raw_wasm</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li><a href=\"#v:raw_wasm_hash\">raw_wasm_hash</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li><a href=\"#v:init_method\">init_method</a> :: <a href=\"IC-Canister.html#t:InitFunc\" title=\"IC.Canister\">InitFunc</a></li><li><a href=\"#v:update_methods\">update_methods</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> <a href=\"IC-Types.html#t:-8614-\" title=\"IC.Types\">&#8614;</a> (<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister.html#t:UpdateFunc\" title=\"IC.Canister\">UpdateFunc</a>)</li><li><a href=\"#v:query_methods\">query_methods</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> <a href=\"IC-Types.html#t:-8614-\" title=\"IC.Types\">&#8614;</a> (<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister.html#t:QueryFunc\" title=\"IC.Canister\">QueryFunc</a>)</li><li><a href=\"#v:callbacks\">callbacks</a> :: <a href=\"IC-Types.html#t:Callback\" title=\"IC.Types\">Callback</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Canister.html#t:UpdateFunc\" title=\"IC.Canister\">UpdateFunc</a></li><li><a href=\"#v:cleanup\">cleanup</a> :: <a href=\"IC-Types.html#t:WasmClosure\" title=\"IC.Types\">WasmClosure</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a>, ())</li><li><a href=\"#v:pre_upgrade_method\">pre_upgrade_method</a> :: <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>, <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>)</li><li><a href=\"#v:post_upgrade_method\">post_upgrade_method</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a>, <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>)</li><li><a href=\"#v:inspect_message\">inspect_message</a> :: <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> ()</li></ul>}","name":"CanisterModule CanisterModule cleanup callbacks raw_wasm raw_wasm_hash init_method update_methods query_methods pre_upgrade_method post_upgrade_method inspect_message","module":"IC.Canister","link":"IC-Canister.html#t:CanisterModule"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InitFunc\">InitFunc</a> = <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a>, <a href=\"IC-Types.html#t:CanisterActions\" title=\"IC.Types\">CanisterActions</a>)","name":"InitFunc","module":"IC.Canister","link":"IC-Canister.html#t:InitFunc"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UpdateFunc\">UpdateFunc</a> = <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> (<a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a>, <a href=\"IC-Types.html#t:UpdateResult\" title=\"IC.Types\">UpdateResult</a>)","name":"UpdateFunc","module":"IC.Canister","link":"IC-Canister.html#t:UpdateFunc"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:QueryFunc\">QueryFunc</a> = <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a> -&gt; <a href=\"IC-Types.html#t:TrapOr\" title=\"IC.Types\">TrapOr</a> <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a>","name":"QueryFunc","module":"IC.Canister","link":"IC-Canister.html#t:QueryFunc"},{"display_html":"<a href=\"#v:asUpdate\">asUpdate</a> :: (<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister.html#t:QueryFunc\" title=\"IC.Canister\">QueryFunc</a>) -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Env\" title=\"IC.Types\">Env</a> -&gt; <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a> -&gt; <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a> -&gt; <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-Canister.html#t:UpdateFunc\" title=\"IC.Canister\">UpdateFunc</a>","name":"asUpdate","module":"IC.Canister","link":"IC-Canister.html#v:asUpdate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IC\">IC</a> = <a href=\"#v:IC\">IC</a> {<ul class=\"subs\"><li><a href=\"#v:canisters\">canisters</a> :: <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> <a href=\"IC-Types.html#t:-8614-\" title=\"IC.Types\">&#8614;</a> <a href=\"IC-Ref.html#t:CanState\" title=\"IC.Ref\">CanState</a></li><li><a href=\"#v:requests\">requests</a> :: <a href=\"IC-Types.html#t:RequestID\" title=\"IC.Types\">RequestID</a> <a href=\"IC-Types.html#t:-8614-\" title=\"IC.Types\">&#8614;</a> (<a href=\"IC-Ref.html#t:CallRequest\" title=\"IC.Ref\">CallRequest</a>, <a href=\"IC-Ref.html#t:RequestStatus\" title=\"IC.Ref\">RequestStatus</a>)</li><li><a href=\"#v:messages\">messages</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Sequence.html#t:Seq\" title=\"Data.Sequence\">Seq</a> <a href=\"IC-Ref.html#t:Message\" title=\"IC.Ref\">Message</a></li><li><a href=\"#v:call_contexts\">call_contexts</a> :: CallId <a href=\"IC-Types.html#t:-8614-\" title=\"IC.Types\">&#8614;</a> <a href=\"IC-Ref.html#t:CallContext\" title=\"IC.Ref\">CallContext</a></li><li><a href=\"#v:rng\">rng</a> :: StdGen</li><li><a href=\"#v:secretRootKey\">secretRootKey</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a></li><li><a href=\"#v:secretSubnetKey\">secretSubnetKey</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a></li></ul>}","name":"IC IC rng canisters requests messages call_contexts secretRootKey secretSubnetKey","module":"IC.Ref","link":"IC-Ref.html#t:IC"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallRequest\">CallRequest</a> = <a href=\"#v:CallRequest\">CallRequest</a> <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> <a href=\"IC-Types.html#t:UserId\" title=\"IC.Types\">UserId</a> <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"CallRequest CallRequest","module":"IC.Ref","link":"IC-Ref.html#t:CallRequest"},{"display_html":"<a href=\"#v:callerOfCallRequest\">callerOfCallRequest</a> :: <a href=\"IC-Ref.html#t:CallRequest\" title=\"IC.Ref\">CallRequest</a> -&gt; <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"callerOfCallRequest","module":"IC.Ref","link":"IC-Ref.html#v:callerOfCallRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryRequest\">QueryRequest</a> = <a href=\"#v:QueryRequest\">QueryRequest</a> <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> <a href=\"IC-Types.html#t:UserId\" title=\"IC.Types\">UserId</a> <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"QueryRequest QueryRequest","module":"IC.Ref","link":"IC-Ref.html#t:QueryRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReadStateRequest\">ReadStateRequest</a> = <a href=\"#v:ReadStateRequest\">ReadStateRequest</a> <a href=\"IC-Types.html#t:UserId\" title=\"IC.Types\">UserId</a> [<a href=\"IC-HashTree.html#t:Path\" title=\"IC.HashTree\">Path</a>]","name":"ReadStateRequest ReadStateRequest","module":"IC.Ref","link":"IC-Ref.html#t:ReadStateRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RequestStatus\">RequestStatus</a><ul class=\"subs\"><li>= <a href=\"#v:Received\">Received</a></li><li>| <a href=\"#v:Processing\">Processing</a></li><li>| <a href=\"#v:CallResponse\">CallResponse</a> <a href=\"IC-Ref.html#t:CallResponse\" title=\"IC.Ref\">CallResponse</a></li></ul>","name":"RequestStatus CallResponse Received Processing","module":"IC.Ref","link":"IC-Ref.html#t:RequestStatus"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReqResponse\">ReqResponse</a><ul class=\"subs\"><li>= <a href=\"#v:QueryResponse\">QueryResponse</a> <a href=\"IC-Ref.html#t:CallResponse\" title=\"IC.Ref\">CallResponse</a></li><li>| <a href=\"#v:ReadStateResponse\">ReadStateResponse</a> <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a></li></ul>","name":"ReqResponse QueryResponse ReadStateResponse","module":"IC.Ref","link":"IC-Ref.html#t:ReqResponse"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallResponse\">CallResponse</a><ul class=\"subs\"><li>= <a href=\"#v:Rejected\">Rejected</a> (<a href=\"IC-Types.html#t:RejectCode\" title=\"IC.Types\">RejectCode</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>)</li><li>| <a href=\"#v:Replied\">Replied</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li></ul>","name":"CallResponse Rejected Replied","module":"IC.Ref","link":"IC-Ref.html#t:CallResponse"},{"display_html":"<a href=\"#v:initialIC\">initialIC</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Ref.html#t:IC\" title=\"IC.Ref\">IC</a>","name":"initialIC","module":"IC.Ref","link":"IC-Ref.html#v:initialIC"},{"display_html":"<a href=\"#v:authCallRequest\">authCallRequest</a> :: RequestValidation m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a> -&gt; <a href=\"IC-Ref.html#t:CallRequest\" title=\"IC.Ref\">CallRequest</a> -&gt; m ()","name":"authCallRequest","module":"IC.Ref","link":"IC-Ref.html#v:authCallRequest"},{"display_html":"<a href=\"#v:authQueryRequest\">authQueryRequest</a> :: RequestValidation m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a> -&gt; <a href=\"IC-Ref.html#t:QueryRequest\" title=\"IC.Ref\">QueryRequest</a> -&gt; m ()","name":"authQueryRequest","module":"IC.Ref","link":"IC-Ref.html#v:authQueryRequest"},{"display_html":"<a href=\"#v:authReadStateRequest\">authReadStateRequest</a> :: RequestValidation m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> -&gt; <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a> -&gt; <a href=\"IC-Ref.html#t:ReadStateRequest\" title=\"IC.Ref\">ReadStateRequest</a> -&gt; m ()","name":"authReadStateRequest","module":"IC.Ref","link":"IC-Ref.html#v:authReadStateRequest"},{"display_html":"<a href=\"#v:submitRequest\">submitRequest</a> :: ICM m =&gt; <a href=\"IC-Types.html#t:RequestID\" title=\"IC.Types\">RequestID</a> -&gt; <a href=\"IC-Ref.html#t:CallRequest\" title=\"IC.Ref\">CallRequest</a> -&gt; m ()","name":"submitRequest","module":"IC.Ref","link":"IC-Ref.html#v:submitRequest"},{"display_html":"<a href=\"#v:handleQuery\">handleQuery</a> :: ICM m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Ref.html#t:QueryRequest\" title=\"IC.Ref\">QueryRequest</a> -&gt; m <a href=\"IC-Ref.html#t:ReqResponse\" title=\"IC.Ref\">ReqResponse</a>","name":"handleQuery","module":"IC.Ref","link":"IC-Ref.html#v:handleQuery"},{"display_html":"<a href=\"#v:handleReadState\">handleReadState</a> :: ICM m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; <a href=\"IC-Ref.html#t:ReadStateRequest\" title=\"IC.Ref\">ReadStateRequest</a> -&gt; m <a href=\"IC-Ref.html#t:ReqResponse\" title=\"IC.Ref\">ReqResponse</a>","name":"handleReadState","module":"IC.Ref","link":"IC-Ref.html#v:handleReadState"},{"display_html":"<a href=\"#v:runStep\">runStep</a> :: ICM m =&gt; m <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"runStep","module":"IC.Ref","link":"IC-Ref.html#v:runStep"},{"display_html":"<a href=\"#v:runToCompletion\">runToCompletion</a> :: ICM m =&gt; m ()","name":"runToCompletion","module":"IC.Ref","link":"IC-Ref.html#v:runToCompletion"},{"display_html":"<a href=\"#v:setAllTimesTo\">setAllTimesTo</a> :: ICM m =&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; m ()","name":"setAllTimesTo","module":"IC.Ref","link":"IC-Ref.html#v:setAllTimesTo"},{"display_html":"<a href=\"#v:createEmptyCanister\">createEmptyCanister</a> :: ICM m =&gt; <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a> -&gt; <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a> -&gt; m ()","name":"createEmptyCanister","module":"IC.Ref","link":"IC-Ref.html#v:createEmptyCanister"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallContext\">CallContext</a> = <a href=\"#v:CallContext\">CallContext</a> {<ul class=\"subs\"><li><a href=\"#v:canister\">canister</a> :: <a href=\"IC-Types.html#t:CanisterId\" title=\"IC.Types\">CanisterId</a></li><li><a href=\"#v:origin\">origin</a> :: <a href=\"IC-Ref.html#t:CallOrigin\" title=\"IC.Ref\">CallOrigin</a></li><li><a href=\"#v:responded\">responded</a> :: <a href=\"IC-Types.html#t:Responded\" title=\"IC.Types\">Responded</a></li><li><a href=\"#v:deleted\">deleted</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:available_cycles\">available_cycles</a> :: <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li><li><a href=\"#v:last_trap\">last_trap</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>}","name":"CallContext CallContext origin canister responded deleted available_cycles last_trap","module":"IC.Ref","link":"IC-Ref.html#t:CallContext"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Message\">Message</a><ul class=\"subs\"><li>= <a href=\"#v:CallMessage\">CallMessage</a> { <ul class=\"subs\"><li><a href=\"#v:call_context\">call_context</a> :: CallId</li><li><a href=\"#v:entry\">entry</a> :: <a href=\"IC-Ref.html#t:EntryPoint\" title=\"IC.Ref\">EntryPoint</a></li></ul> }</li><li>| <a href=\"#v:ResponseMessage\">ResponseMessage</a> { <ul class=\"subs\"><li><a href=\"#v:call_context\">call_context</a> :: CallId</li><li><a href=\"#v:response\">response</a> :: <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a></li><li><a href=\"#v:refunded_cycles\">refunded_cycles</a> :: <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li></ul> }</li></ul>","name":"Message CallMessage ResponseMessage response call_context entry refunded_cycles","module":"IC.Ref","link":"IC-Ref.html#t:Message"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CanState\">CanState</a> = <a href=\"#v:CanState\">CanState</a> {<ul class=\"subs\"><li><a href=\"#v:content\">content</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Ref.html#t:CanisterContent\" title=\"IC.Ref\">CanisterContent</a></li><li><a href=\"#v:run_status\">run_status</a> :: <a href=\"IC-Ref.html#t:RunStatus\" title=\"IC.Ref\">RunStatus</a></li><li><a href=\"#v:controllers\">controllers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a></li><li><a href=\"#v:memory_allocation\">memory_allocation</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a></li><li><a href=\"#v:compute_allocation\">compute_allocation</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a></li><li><a href=\"#v:freezing_threshold\">freezing_threshold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a></li><li><a href=\"#v:time\">time</a> :: <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a></li><li><a href=\"#v:cycle_balance\">cycle_balance</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a></li><li><a href=\"#v:certified_data\">certified_data</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li></ul>}","name":"CanState CanState time freezing_threshold memory_allocation compute_allocation controllers certified_data content run_status cycle_balance","module":"IC.Ref","link":"IC-Ref.html#t:CanState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallOrigin\">CallOrigin</a><ul class=\"subs\"><li>= <a href=\"#v:FromUser\">FromUser</a> <a href=\"IC-Types.html#t:RequestID\" title=\"IC.Types\">RequestID</a></li><li>| <a href=\"#v:FromCanister\">FromCanister</a> CallId <a href=\"IC-Types.html#t:Callback\" title=\"IC.Types\">Callback</a></li></ul>","name":"CallOrigin FromUser FromCanister","module":"IC.Ref","link":"IC-Ref.html#t:CallOrigin"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EntryPoint\">EntryPoint</a><ul class=\"subs\"><li>= <a href=\"#v:Public\">Public</a> <a href=\"IC-Types.html#t:MethodName\" title=\"IC.Types\">MethodName</a> <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a></li><li>| <a href=\"#v:Closure\">Closure</a> <a href=\"IC-Types.html#t:Callback\" title=\"IC.Types\">Callback</a> <a href=\"IC-Types.html#t:Response\" title=\"IC.Types\">Response</a> <a href=\"IC-Types.html#t:Cycles\" title=\"IC.Types\">Cycles</a></li></ul>","name":"EntryPoint Public Closure","module":"IC.Ref","link":"IC-Ref.html#t:EntryPoint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RunStatus\">RunStatus</a><ul class=\"subs\"><li>= <a href=\"#v:IsRunning\">IsRunning</a></li><li>| <a href=\"#v:IsStopping\">IsStopping</a> [CallId]</li><li>| <a href=\"#v:IsStopped\">IsStopped</a></li><li>| <a href=\"#v:IsDeleted\">IsDeleted</a></li></ul>","name":"RunStatus IsRunning IsStopping IsStopped IsDeleted","module":"IC.Ref","link":"IC-Ref.html#t:RunStatus"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CanisterContent\">CanisterContent</a> = <a href=\"#v:CanisterContent\">CanisterContent</a> {<ul class=\"subs\"><li><a href=\"#v:can_mod\">can_mod</a> :: <a href=\"IC-Canister.html#t:CanisterModule\" title=\"IC.Canister\">CanisterModule</a></li><li><a href=\"#v:wasm_state\">wasm_state</a> :: <a href=\"IC-Canister.html#t:WasmState\" title=\"IC.Canister\">WasmState</a></li></ul>}","name":"CanisterContent CanisterContent wasm_state can_mod","module":"IC.Ref","link":"IC-Ref.html#t:CanisterContent"},{"display_html":"<a href=\"#v:dummyUserId\">dummyUserId</a> :: <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"dummyUserId","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:dummyUserId"},{"display_html":"<a href=\"#v:stripEnvelope\">stripEnvelope</a> :: <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> (<a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>, <a href=\"IC-Types.html#t:EnvValidity\" title=\"IC.Types\">EnvValidity</a>)","name":"stripEnvelope","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:stripEnvelope"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DelegationHash\">DelegationHash</a> = <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>","name":"DelegationHash","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#t:DelegationHash"},{"display_html":"<a href=\"#v:delegationField\">delegationField</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> (<a href=\"IC-Types.html#t:PublicKey\" title=\"IC.Types\">PublicKey</a>, <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>], <a href=\"IC-HTTP-Request.html#t:DelegationHash\" title=\"IC.HTTP.Request\">DelegationHash</a>, <a href=\"IC-Types.html#t:Blob\" title=\"IC.Types\">Blob</a>)","name":"delegationField","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:delegationField"},{"display_html":"<a href=\"#v:getTimestamp\">getTimestamp</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Types.html#t:Timestamp\" title=\"IC.Types\">Timestamp</a>","name":"getTimestamp","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:getTimestamp"},{"display_html":"<a href=\"#v:callRequest\">callRequest</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-Ref.html#t:CallRequest\" title=\"IC.Ref\">CallRequest</a>","name":"callRequest","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:callRequest"},{"display_html":"<a href=\"#v:queryRequest\">queryRequest</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-Ref.html#t:QueryRequest\" title=\"IC.Ref\">QueryRequest</a>","name":"queryRequest","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:queryRequest"},{"display_html":"<a href=\"#v:readStateRequest\">readStateRequest</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"IC-Ref.html#t:ReadStateRequest\" title=\"IC.Ref\">ReadStateRequest</a>","name":"readStateRequest","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:readStateRequest"},{"display_html":"<a href=\"#v:entitiyId\">entitiyId</a> :: <a href=\"IC-HTTP-GenR-Parse.html#t:Field\" title=\"IC.HTTP.GenR.Parse\">Field</a> <a href=\"IC-Types.html#t:EntityId\" title=\"IC.Types\">EntityId</a>","name":"entitiyId","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:entitiyId"},{"display_html":"<a href=\"#v:response\">response</a> :: <a href=\"IC-Ref.html#t:ReqResponse\" title=\"IC.Ref\">ReqResponse</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"response","module":"IC.HTTP.Request","link":"IC-HTTP-Request.html#v:response"},{"display_html":"<a href=\"#v:id\">id</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"id","module":"SourceId","link":"SourceId.html#v:id"},{"display_html":"<a href=\"#v:specVersion\">specVersion</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"specVersion","module":"IC.Version","link":"IC-Version.html#v:specVersion"},{"display_html":"<a href=\"#v:implVersion\">implVersion</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"implVersion","module":"IC.Version","link":"IC-Version.html#v:implVersion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AgentConfig\">AgentConfig</a> = <a href=\"#v:AgentConfig\">AgentConfig</a> {<ul class=\"subs\"><li><a href=\"#v:tc_root_key\">tc_root_key</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a></li><li><a href=\"#v:tc_manager\">tc_manager</a> :: Manager</li><li><a href=\"#v:tc_endPoint\">tc_endPoint</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>}","name":"AgentConfig AgentConfig tc_endPoint tc_manager tc_root_key","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:AgentConfig"},{"display_html":"<a href=\"#v:makeAgentConfig\">makeAgentConfig</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a>","name":"makeAgentConfig","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:makeAgentConfig"},{"display_html":"<a href=\"#v:preFlight\">preFlight</a> :: OptionSet -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a>","name":"preFlight","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:preFlight"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ReplWrapper\">ReplWrapper</a> = <a href=\"#v:R\">R</a> (<span class=\"keyword\">forall</span> a. (<a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; a) -&gt; a)","name":"ReplWrapper R","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:ReplWrapper"},{"display_html":"<a href=\"#v:connect\">connect</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReplWrapper\" title=\"IC.Test.Agent\">ReplWrapper</a>","name":"connect","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:connect"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HasAgentConfig\">HasAgentConfig</a> = ?agentConfig :: <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a>","name":"HasAgentConfig","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:HasAgentConfig"},{"display_html":"<a href=\"#v:withAgentConfig\">withAgentConfig</a> :: (<span class=\"keyword\">forall</span>. <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; a) -&gt; <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a> -&gt; a","name":"withAgentConfig","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:withAgentConfig"},{"display_html":"<a href=\"#v:agentConfig\">agentConfig</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a>","name":"agentConfig","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:agentConfig"},{"display_html":"<a href=\"#v:endPoint\">endPoint</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"endPoint","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:endPoint"},{"display_html":"<a href=\"#v:agentManager\">agentManager</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; Manager","name":"agentManager","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:agentManager"},{"display_html":"<a href=\"#v:doesn-39-tExist\">doesn'tExist</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"doesn'tExist","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:doesn-39-tExist"},{"display_html":"<a href=\"#v:defaultSK\">defaultSK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"defaultSK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:defaultSK"},{"display_html":"<a href=\"#v:otherSK\">otherSK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"otherSK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:otherSK"},{"display_html":"<a href=\"#v:webAuthnECDSASK\">webAuthnECDSASK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"webAuthnECDSASK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:webAuthnECDSASK"},{"display_html":"<a href=\"#v:webAuthnRSASK\">webAuthnRSASK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"webAuthnRSASK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:webAuthnRSASK"},{"display_html":"<a href=\"#v:ecdsaSK\">ecdsaSK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"ecdsaSK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ecdsaSK"},{"display_html":"<a href=\"#v:secp256k1SK\">secp256k1SK</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>","name":"secp256k1SK","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:secp256k1SK"},{"display_html":"<a href=\"#v:defaultUser\">defaultUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"defaultUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:defaultUser"},{"display_html":"<a href=\"#v:otherUser\">otherUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"otherUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:otherUser"},{"display_html":"<a href=\"#v:webAuthnECDSAUser\">webAuthnECDSAUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"webAuthnECDSAUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:webAuthnECDSAUser"},{"display_html":"<a href=\"#v:webAuthnRSAUser\">webAuthnRSAUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"webAuthnRSAUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:webAuthnRSAUser"},{"display_html":"<a href=\"#v:ecdsaUser\">ecdsaUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"ecdsaUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ecdsaUser"},{"display_html":"<a href=\"#v:secp256k1User\">secp256k1User</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"secp256k1User","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:secp256k1User"},{"display_html":"<a href=\"#v:anonymousUser\">anonymousUser</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"anonymousUser","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:anonymousUser"},{"display_html":"<a href=\"#v:addIfNotThere\">addIfNotThere</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; m <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; m <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"addIfNotThere","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:addIfNotThere"},{"display_html":"<a href=\"#v:addNonce\">addNonce</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"addNonce","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:addNonce"},{"display_html":"<a href=\"#v:getRand8Bytes\">getRand8Bytes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>","name":"getRand8Bytes","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:getRand8Bytes"},{"display_html":"<a href=\"#v:addExpiry\">addExpiry</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"addExpiry","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:addExpiry"},{"display_html":"<a href=\"#v:envelope\">envelope</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"envelope","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:envelope"},{"display_html":"<a href=\"#v:delegationEnv\">delegationEnv</a> :: <a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a> -&gt; [(<a href=\"IC-Crypto.html#t:SecretKey\" title=\"IC.Crypto\">SecretKey</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>])] -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"delegationEnv","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:delegationEnv"},{"display_html":"<a href=\"#v:senderOf\">senderOf</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"senderOf","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:senderOf"},{"display_html":"<a href=\"#v:addNonceExpiryEnv\">addNonceExpiryEnv</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"addNonceExpiryEnv","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:addNonceExpiryEnv"},{"display_html":"<a href=\"#v:envelopeFor\">envelopeFor</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"envelopeFor","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:envelopeFor"},{"display_html":"<a href=\"#v:asRight\">asRight</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"asRight","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:asRight"},{"display_html":"<a href=\"#v:asExceptT\">asExceptT</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#t:ExceptT\" title=\"Control.Monad.Except\">ExceptT</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"asExceptT","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:asExceptT"},{"display_html":"<a href=\"#v:postCBOR\">postCBOR</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"postCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:postCBOR"},{"display_html":"<a href=\"#v:postCallCBOR\">postCallCBOR</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"postCallCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:postCallCBOR"},{"display_html":"<a href=\"#v:postQueryCBOR\">postQueryCBOR</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"postQueryCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:postQueryCBOR"},{"display_html":"<a href=\"#v:postReadStateCBOR\">postReadStateCBOR</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a>)","name":"postReadStateCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:postReadStateCBOR"},{"display_html":"<a href=\"#v:queryCBOR\">queryCBOR</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"queryCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:queryCBOR"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:HTTPErrOrReqResponse\">HTTPErrOrReqResponse</a> = <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"HTTPErrOrReqResponse","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:HTTPErrOrReqResponse"},{"display_html":"<a href=\"#v:awaitCall-39-\">awaitCall'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"awaitCall'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:awaitCall-39-"},{"display_html":"<a href=\"#v:awaitCall\">awaitCall</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"awaitCall","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:awaitCall"},{"display_html":"<a href=\"#v:is2xx\">is2xx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"is2xx","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:is2xx"},{"display_html":"<a href=\"#v:getStateCert-39-\">getStateCert'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; [[<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>]] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (Response <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>)","name":"getStateCert'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:getStateCert-39-"},{"display_html":"<a href=\"#v:decodeCert-39-\">decodeCert'</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a>","name":"decodeCert'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:decodeCert-39-"},{"display_html":"<a href=\"#v:getStateCert\">getStateCert</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; [[<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>]] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a>","name":"getStateCert","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:getStateCert"},{"display_html":"<a href=\"#v:extractCertData\">extractCertData</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"extractCertData","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:extractCertData"},{"display_html":"<a href=\"#v:verboseVerify\">verboseVerify</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"verboseVerify","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:verboseVerify"},{"display_html":"<a href=\"#v:validateDelegation\">validateDelegation</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"IC-Certificate.html#t:Delegation\" title=\"IC.Certificate\">Delegation</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"validateDelegation","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:validateDelegation"},{"display_html":"<a href=\"#v:validateStateCert-39-\">validateStateCert'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"validateStateCert'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:validateStateCert-39-"},{"display_html":"<a href=\"#v:validateStateCert\">validateStateCert</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"validateStateCert","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:validateStateCert"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReqResponse\">ReqResponse</a><ul class=\"subs\"><li>= <a href=\"#v:Reply\">Reply</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a></li><li>| <a href=\"#v:Reject\">Reject</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>","name":"ReqResponse Reject Reply","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:ReqResponse"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReqStatus\">ReqStatus</a><ul class=\"subs\"><li>= <a href=\"#v:Processing\">Processing</a></li><li>| <a href=\"#v:Pending\">Pending</a></li><li>| <a href=\"#v:Responded\">Responded</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a></li><li>| <a href=\"#v:UnknownStatus\">UnknownStatus</a></li></ul>","name":"ReqStatus UnknownStatus Pending Processing Responded","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:ReqStatus"},{"display_html":"<a href=\"#v:prettyPath\">prettyPath</a> :: [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettyPath","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:prettyPath"},{"display_html":"<a href=\"#v:prettyBlob\">prettyBlob</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettyBlob","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:prettyBlob"},{"display_html":"<a href=\"#v:certValue\">certValue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Certificate-Value.html#t:CertVal\" title=\"IC.Certificate.Value\">CertVal</a> a =&gt; <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"certValue","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:certValue"},{"display_html":"<a href=\"#v:certValueAbsent\">certValueAbsent</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Certificate.html#t:Certificate\" title=\"IC.Certificate\">Certificate</a> -&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"certValueAbsent","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:certValueAbsent"},{"display_html":"<a href=\"#v:getRequestStatus\">getRequestStatus</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqStatus\" title=\"IC.Test.Agent\">ReqStatus</a>","name":"getRequestStatus","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:getRequestStatus"},{"display_html":"<a href=\"#v:awaitStatus\">awaitStatus</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"awaitStatus","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:awaitStatus"},{"display_html":"<a href=\"#v:pollDelay\">pollDelay</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"pollDelay","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:pollDelay"},{"display_html":"<a href=\"#v:ingressDelay\">ingressDelay</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ingressDelay","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ingressDelay"},{"display_html":"<a href=\"#v:codePred\">codePred</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) -&gt; Response <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"codePred","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:codePred"},{"display_html":"<a href=\"#v:code2xx\">code2xx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"code2xx","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:code2xx"},{"display_html":"<a href=\"#v:code202\">code202</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"code202","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:code202"},{"display_html":"<a href=\"#v:code4xx\">code4xx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"code4xx","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:code4xx"},{"display_html":"<a href=\"#v:code202_or_4xx\">code202_or_4xx</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"code202_or_4xx","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:code202_or_4xx"},{"display_html":"<a href=\"#v:okCBOR\">okCBOR</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; Response <a href=\"https://hackage.haskell.org/package/bytestring-0.10.10.1/docs/Data-ByteString-Lazy.html#t:ByteString\" title=\"Data.ByteString.Lazy\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"okCBOR","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:okCBOR"},{"display_html":"<a href=\"#v:queryResponse\">queryResponse</a> :: <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"queryResponse","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:queryResponse"},{"display_html":"<a href=\"#v:isReject\">isReject</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; [<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>] -&gt; <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"isReject","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:isReject"},{"display_html":"<a href=\"#v:isErrOrReject\">isErrOrReject</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; [<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a>] -&gt; <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"isErrOrReject","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:isErrOrReject"},{"display_html":"<a href=\"#v:isReply\">isReply</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"isReply","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:isReply"},{"display_html":"<a href=\"#v:asWord32\">asWord32</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>","name":"asWord32","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:asWord32"},{"display_html":"<a href=\"#v:asWord64\">asWord64</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a>","name":"asWord64","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:asWord64"},{"display_html":"<a href=\"#v:as2Word64\">as2Word64</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a>)","name":"as2Word64","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:as2Word64"},{"display_html":"<a href=\"#v:bothSame\">bothSame</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a) =&gt; (a, a) -&gt; Assertion","name":"bothSame","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:bothSame"},{"display_html":"<a href=\"#v:runGet\">runGet</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/binary-0.8.7.0/docs/Data-Binary-Get-Internal.html#t:Get\" title=\"Data.Binary.Get.Internal\">Get</a> a -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"runGet","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:runGet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StatusResponse\">StatusResponse</a> = <a href=\"#v:StatusResponse\">StatusResponse</a> {<ul class=\"subs\"><li><a href=\"#v:status_api_version\">status_api_version</a> :: <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:status_root_key\">status_root_key</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a></li></ul>}","name":"StatusResponse StatusResponse status_root_key status_api_version","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:StatusResponse"},{"display_html":"<a href=\"#v:statusResonse\">statusResonse</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:StatusResponse\" title=\"IC.Test.Agent\">StatusResponse</a>","name":"statusResonse","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:statusResonse"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IC00\">IC00</a> = <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"IC00","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:IC00"},{"display_html":"<a href=\"#v:ic00as\">ic00as</a> :: (<a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a>","name":"ic00as","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic00as"},{"display_html":"<a href=\"#v:ic00\">ic00</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a>","name":"ic00","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic00"},{"display_html":"<a href=\"#v:ic00as-39-\">ic00as'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/text-1.2.4.0/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic00as'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic00as-39-"},{"display_html":"<a href=\"#v:callIC\">callIC</a> :: <span class=\"keyword\">forall</span> s a b. (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-TypeLits.html#t:KnownSymbol\" title=\"GHC.TypeLits\">KnownSymbol</a> s =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) ~ (<a href=\"IC-Management.html#t:ICManagement\" title=\"IC.Management\">ICManagement</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> .! s) =&gt; (CandidArg a, CandidArg b) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; Label s -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"callIC","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:callIC"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:UnRec\">UnRec</a> r <span class=\"keyword\">where ...</span>","name":"UnRec","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:UnRec"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PartialSettings\">PartialSettings</a> r = (Forall r Unconstrained1, (Map <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> r .// <a href=\"IC-Test-Agent.html#t:UnRec\" title=\"IC.Test.Agent\">UnRec</a> <a href=\"IC-Management.html#t:Settings\" title=\"IC.Management\">Settings</a>) &#8776; <a href=\"IC-Test-Agent.html#t:UnRec\" title=\"IC.Test.Agent\">UnRec</a> <a href=\"IC-Management.html#t:Settings\" title=\"IC.Management\">Settings</a>)","name":"PartialSettings","module":"IC.Test.Agent","link":"IC-Test-Agent.html#t:PartialSettings"},{"display_html":"<a href=\"#v:fromPartialSettings\">fromPartialSettings</a> :: <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r =&gt; Rec r -&gt; <a href=\"IC-Management.html#t:Settings\" title=\"IC.Management\">Settings</a>","name":"fromPartialSettings","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:fromPartialSettings"},{"display_html":"<a href=\"#v:ic_create\">ic_create</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; Rec r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"ic_create","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_create"},{"display_html":"<a href=\"#v:ic_provisional_create\">ic_provisional_create</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> -&gt; Rec r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"ic_provisional_create","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_provisional_create"},{"display_html":"<a href=\"#v:ic_install\">ic_install</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Management.html#t:InstallMode\" title=\"IC.Management\">InstallMode</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_install","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_install"},{"display_html":"<a href=\"#v:ic_uninstall\">ic_uninstall</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_uninstall","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_uninstall"},{"display_html":"<a href=\"#v:ic_set_controllers\">ic_set_controllers</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_set_controllers","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_set_controllers"},{"display_html":"<a href=\"#v:ic_start_canister\">ic_start_canister</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_start_canister","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_start_canister"},{"display_html":"<a href=\"#v:ic_stop_canister\">ic_stop_canister</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_stop_canister","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_stop_canister"},{"display_html":"<a href=\"#v:ic_canister_status\">ic_canister_status</a> :: <span class=\"keyword\">forall</span> a b. (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) ~ (<a href=\"IC-Management.html#t:ICManagement\" title=\"IC.Management\">ICManagement</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> .! &quot;canister_status&quot;) =&gt; <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b","name":"ic_canister_status","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_canister_status"},{"display_html":"<a href=\"#v:ic_deposit_cycles\">ic_deposit_cycles</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_deposit_cycles","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_deposit_cycles"},{"display_html":"<a href=\"#v:ic_top_up\">ic_top_up</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_top_up","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_top_up"},{"display_html":"<a href=\"#v:ic_delete_canister\">ic_delete_canister</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"ic_delete_canister","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_delete_canister"},{"display_html":"<a href=\"#v:ic_raw_rand\">ic_raw_rand</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>","name":"ic_raw_rand","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_raw_rand"},{"display_html":"<a href=\"#v:callIC-39-\">callIC'</a> :: <span class=\"keyword\">forall</span> s a b. <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-TypeLits.html#t:KnownSymbol\" title=\"GHC.TypeLits\">KnownSymbol</a> s =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) ~ (<a href=\"IC-Management.html#t:ICManagement\" title=\"IC.Management\">ICManagement</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> .! s) =&gt; CandidArg a =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; Label s -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"callIC'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:callIC-39-"},{"display_html":"<a href=\"#v:ic_create-39-\">ic_create'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; Rec r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_create'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_create-39-"},{"display_html":"<a href=\"#v:ic_provisional_create-39-\">ic_provisional_create'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> -&gt; Rec r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_provisional_create'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_provisional_create-39-"},{"display_html":"<a href=\"#v:ic_install-39-\">ic_install'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Management.html#t:InstallMode\" title=\"IC.Management\">InstallMode</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_install'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_install-39-"},{"display_html":"<a href=\"#v:ic_update_settings-39-\">ic_update_settings'</a> :: (<a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>, <a href=\"IC-Test-Agent.html#t:PartialSettings\" title=\"IC.Test.Agent\">PartialSettings</a> r) =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; Rec r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_update_settings'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_update_settings-39-"},{"display_html":"<a href=\"#v:ic_set_controllers-39-\">ic_set_controllers'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_set_controllers'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_set_controllers-39-"},{"display_html":"<a href=\"#v:ic_delete_canister-39-\">ic_delete_canister'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_delete_canister'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_delete_canister-39-"},{"display_html":"<a href=\"#v:ic_deposit_cycles-39-\">ic_deposit_cycles'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_deposit_cycles'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_deposit_cycles-39-"},{"display_html":"<a href=\"#v:ic_top_up-39-\">ic_top_up'</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Test-Agent.html#t:IC00\" title=\"IC.Test.Agent\">IC00</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Natural.html#t:Natural\" title=\"GHC.Natural\">Natural</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:ReqResponse\" title=\"IC.Test.Agent\">ReqResponse</a>","name":"ic_top_up'","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_top_up-39-"},{"display_html":"<a href=\"#v:callIC-39--39-\">callIC''</a> :: <span class=\"keyword\">forall</span> s a b. <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-TypeLits.html#t:KnownSymbol\" title=\"GHC.TypeLits\">KnownSymbol</a> s =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> b) ~ (<a href=\"IC-Management.html#t:ICManagement\" title=\"IC.Management\">ICManagement</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> .! s) =&gt; CandidArg a =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; Label s -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"callIC''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:callIC-39--39-"},{"display_html":"<a href=\"#v:ic_install-39--39-\">ic_install''</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a>) =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Management.html#t:InstallMode\" title=\"IC.Management\">InstallMode</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_install''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_install-39--39-"},{"display_html":"<a href=\"#v:ic_uninstall-39--39-\">ic_uninstall''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_uninstall''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_uninstall-39--39-"},{"display_html":"<a href=\"#v:ic_set_controllers-39--39-\">ic_set_controllers''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_set_controllers''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_set_controllers-39--39-"},{"display_html":"<a href=\"#v:ic_start_canister-39--39-\">ic_start_canister''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_start_canister''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_start_canister-39--39-"},{"display_html":"<a href=\"#v:ic_stop_canister-39--39-\">ic_stop_canister''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_stop_canister''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_stop_canister-39--39-"},{"display_html":"<a href=\"#v:ic_canister_status-39--39-\">ic_canister_status''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_canister_status''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_canister_status-39--39-"},{"display_html":"<a href=\"#v:ic_delete_canister-39--39-\">ic_delete_canister''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_delete_canister''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_delete_canister-39--39-"},{"display_html":"<a href=\"#v:ic_deposit_cycles-39--39-\">ic_deposit_cycles''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_deposit_cycles''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_deposit_cycles-39--39-"},{"display_html":"<a href=\"#v:ic_raw_rand-39--39-\">ic_raw_rand''</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> <a href=\"IC-Test-Agent.html#t:HTTPErrOrReqResponse\" title=\"IC.Test.Agent\">HTTPErrOrReqResponse</a>","name":"ic_raw_rand''","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:ic_raw_rand-39--39-"},{"display_html":"<a href=\"#v:barrier\">barrier</a> :: <a href=\"IC-Test-Agent.html#t:HasAgentConfig\" title=\"IC.Test.Agent\">HasAgentConfig</a> =&gt; [<a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> ()","name":"barrier","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:barrier"},{"display_html":"<a href=\"#v:enum\">enum</a> :: (AllUniqueLabels r, <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/GHC-TypeLits.html#t:KnownSymbol\" title=\"GHC.TypeLits\">KnownSymbol</a> l, (r .! l) ~ ()) =&gt; Label l -&gt; Var r","name":"enum","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:enum"},{"display_html":"<a href=\"#v:asHex\">asHex</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"asHex","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:asHex"},{"display_html":"<a href=\"#v:textual\">textual</a> :: <a href=\"IC-Id-Forms.html#t:Blob\" title=\"IC.Id.Forms\">Blob</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"textual","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:textual"},{"display_html":"<a href=\"#v:shorten\">shorten</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"shorten","module":"IC.Test.Agent","link":"IC-Test-Agent.html#v:shorten"},{"display_html":"<a href=\"#v:icTests\">icTests</a> :: <a href=\"IC-Test-Agent.html#t:AgentConfig\" title=\"IC.Test.Agent\">AgentConfig</a> -&gt; TestTree","name":"icTests","module":"IC.Test.Spec","link":"IC-Test-Spec.html#v:icTests"},{"display_html":"<a href=\"#v:r\">r</a> :: <a href=\"IC-Ref.html#t:IC\" title=\"IC.Ref\">IC</a> -&gt; <a href=\"IC-HTTP-GenR.html#t:GenR\" title=\"IC.HTTP.GenR\">GenR</a>","name":"r","module":"IC.HTTP.Status","link":"IC-HTTP-Status.html#v:r"},{"display_html":"<a href=\"#v:withApp\">withApp</a> :: <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; (Application -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.13.0.0/docs/System-IO.html#t:IO\" title=\"System.IO\">IO</a> a","name":"withApp","module":"IC.HTTP","link":"IC-HTTP.html#v:withApp"},{"display_html":"<a href=\"#v:handle\">handle</a> :: <a href=\"IC-StateFile.html#t:Store\" title=\"IC.StateFile\">Store</a> <a href=\"IC-Ref.html#t:IC\" title=\"IC.Ref\">IC</a> -&gt; Application","name":"handle","module":"IC.HTTP","link":"IC-HTTP.html#v:handle"}]